__NUXT_JSONP__("/wiki/content/%E9%80%82%E9%85%8D-iOS11%E5%88%98%E6%B5%B7%E5%B1%8FEdgeProtect%E7%9B%B8%E5%85%B3", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao){return {data:[{},{article:{slug:L,draft:false,date:M,title:N,toc:[{id:O,depth:E,text:P},{id:Q,depth:3,text:R},{id:S,depth:E,text:T},{id:y,depth:E,text:y}],body:{type:"root",children:[{type:b,tag:"blockquote",props:{},children:[{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"转载并整理自: "},{type:b,tag:x,props:{href:U,rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:U}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:F,props:{id:O},children:[{type:b,tag:x,props:{href:"#edge-protect",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:P}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"苹果非常不建议开发者干涉系统手势，但是为了增强用户体验开放了“edge protect”,用来处理屏幕边缘的手势冲突。"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"冲突区域第一次执行手势的时候会有限触发app的内容手势,短时间再有相同的操作就会触发系统手势。即，系统手势经延迟到下一次执行。"}]},{type:a,value:f},{type:b,tag:"h3",props:{id:Q},children:[{type:b,tag:x,props:{href:"#api",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:R}]},{type:a,value:f},{type:b,tag:V,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F Override to return a child view controller or nil. 重写用来返回子视图或者nil."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F If non-nil, that view controller's screen edges deferring system gestures will be used. "}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F 如果非nil，控制器的屏幕边缘的手势将会延迟执行"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F If nil, self is used. Whenever the return value changes, -setNeedsScreenEdgesDeferringSystemGesturesUpdate should be called."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F 如果为nil，则使用self。 当返回值修改时都应该调用`-setNeedsScreenEdgesDeferringSystemGesturesUpdate`"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:$}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"childViewControllerForScreenEdgesDeferringSystemGestures "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F Controls the application's preferred screen edges deferring system gestures when this view controller is shown. Default is UIRectEdgeNone."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F 当显示此视图控制器时，控制需要延迟系统手势的边缘。 默认值为UIRectEdgeNone。"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"UIRectEdge"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"preferredScreenEdgesDeferringSystemGestures "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F This should be called whenever the return values for the view controller's screen edges deferring system gestures have changed."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F 只要更改了视图控制器屏幕边缘的返回值已更改，就应调用此方法。"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"setNeedsUpdateOfScreenEdgesDeferringSystemGestures "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:I,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:"childViewControllerForScreenEdgesDeferringSystemGestures"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"返回childViewControllers中比系统手势优先级更高的子控制器。"},{type:b,tag:ad,props:{},children:[]},{type:a,value:"\n在实现Contrainer view controller时，如果子控制器定义了优先于系统手势的屏幕边缘手势，那么就需要重写这个方法。"}]},{type:a,value:f},{type:b,tag:I,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:"preferredScreenEdgesDeferringSystemGestures"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"因为不论我们从shang、左、下、右边都可触发系统手势，所以方法保护了四个边框，将边界触发的手势延迟执行，这个方法从iOS11开始使用，不过枚举中虽然有左右的边界保护，但是系统手势中还不清楚左右滑动会触发什么效果，实验发现对于VC的左边界右滑动pop手势是无效的，也就是说这个pop手势一直有着最高的优先级。不过上下就很好理解，底部上拉出控制中心，顶部下拉是通知中心。"}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"UIRectEdgeNone: 系统手势优先"},{type:b,tag:ad,props:{},children:[]},{type:a,value:"\nUIRectEdgeAll: 触发屏幕手势后后会先显示小箭头，然后下次滑动就会触发系统手势"}]},{type:a,value:f},{type:b,tag:I,props:{},children:[{type:a,value:f},{type:b,tag:J,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:"setNeedsUpdateOfScreenEdgesDeferringSystemGestures"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"策略修改时，要手动触发下此方法进行更新。"}]},{type:a,value:f},{type:b,tag:F,props:{id:S},children:[{type:b,tag:x,props:{href:"#home-indicator-hidden",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:T}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"自动隐藏"},{type:b,tag:G,props:{},children:[{type:a,value:"Home Indicator"}]}]},{type:a,value:f},{type:b,tag:V,props:{className:[W]},children:[{type:b,tag:X,props:{className:[Y,Z]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F Override to return a child view controller or nil. If non-nil, that view controller's home indicator auto-hiding will be used. If nil, self is used. Whenever the return value changes, -setNeedsHomeIndicatorAutoHiddenUpdate should be called."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:$}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"childViewControllerForHomeIndicatorAutoHidden "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F Controls the application's preferred home indicator auto-hiding when this view controller is shown."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"BOOL"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"prefersHomeIndicatorAutoHidden "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\u002F\u002F This should be called whenever the return values for the view controller's home indicator auto-hiding have changed."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:n}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"setNeedsUpdateOfHomeIndicatorAutoHidden "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"上面写的是自动隐藏，也就是说系统会根据当时的使用情况来进行显示或者隐藏，而不是永久的隐藏掉，实际测试发当界面两秒内没有进行任何交互操作的时候Home Indicator会逐渐隐去，直达屏幕上出现了点击的操作，注意是点击，TableView的滑动并不能触发显示，不过只是是隐藏，但是手势依然可以使用。"}]},{type:a,value:f},{type:b,tag:F,props:{id:y},children:[{type:b,tag:x,props:{href:"#%E5%9D%91%E7%82%B9",ariaHidden:z,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:y}]},{type:a,value:f},{type:b,tag:l,props:{},children:[{type:a,value:"需要注意的是：prefersHomeIndicatorAutoHidden和preferredScreenEdgesDeferringSystemGestures不可一起使用，如果一起使用的话后者是不生效的。"}]}]},dir:"\u002Fwiki\u002FiOS\u002F适配",path:ae,extension:".md",createdAt:af,updatedAt:af},prev:{slug:ag,date:ah,title:ai},next:{slug:"AppClip-一些关于AppClips的笔记",date:"2020-10-26T08:10:45.000Z",title:"一些关于AppClips的笔记(转载)"},scrollTop:aj,sideCategory:[{folderName:"iOS",articles:[{slug:"iOS-Swift-ObjectMapper 指南",title:"Swift-ObjectMapper 指南",date:"2016-05-23 16:13",path:"\u002Fwiki\u002FiOS\u002FiOS-Swift-ObjectMapper 指南"},{slug:"iOS-URL Schemes && Universal Links 简单使用",title:"URL Schemes && Universal Links 简单使用",date:"2017-02-14T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-URL Schemes && Universal Links 简单使用"},{slug:"iOS-YYModel",title:"YYModel几种使用场景",date:ak,path:"\u002Fwiki\u002FiOS\u002FiOS-YYModel"},{slug:"iOS-ios-useful-link",title:"'实用链接",date:"2017-07-14T16:58:04.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-ios-useful-link"},{slug:"iOS-mrpeak杂货铺-iOS应用层架构之CDD",title:"(转)mrpeak杂货铺-iOS应用层架构之CDD",date:al,path:"\u002Fwiki\u002FiOS\u002FiOS-mrpeak杂货铺-iOS应用层架构之CDD"},{slug:"iOS-检测离屏渲染与绘制高性能圆角",title:"(待)检测离屏渲染与绘制高性能圆角",date:"2017-08-17T10:03:56.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-检测离屏渲染与绘制高性能圆角"},{slug:"iOS-深度重构UIViewController",title:"(转)mrpeak杂货铺-深度重构UIViewController",date:"2017-11-19T21:33:42.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-深度重构UIViewController"},{slug:"iOS-添加字体库",title:"使用第三方字体",date:al,path:"\u002Fwiki\u002FiOS\u002FiOS-添加字体库"}],children:[{folderName:"3part",articles:[{slug:"3part-umeng-install",title:"快速集成友盟分享",date:"2018-03-01 16:11",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-umeng-install"},{slug:"3part-快速集成微信支付",title:"快速集成微信\u002F支付宝\u002F银联",date:"2017-11-17T16:19:25.000Z",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-快速集成微信支付"},{slug:"3part-快速集成百度地图",title:"集成百度地图、百度导航",date:"2017-08-11T11:24:43.000Z",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-快速集成百度地图"},{slug:"3part-阿里云视频点播集成",date:"2020-10-26T01:10:15.000Z",title:"阿里云视频点播VOD",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-阿里云视频点播集成"}],children:[]},{folderName:"Autolayout",articles:[{slug:"Autolayout-baseline",title:"label底部对齐、顶部对齐",date:am,path:"\u002Fwiki\u002FiOS\u002FAutolayout\u002FAutolayout-baseline"}],children:[]},{folderName:"Error",articles:[{slug:"Error-2017-07-31",title:"Undefined symbols for architecture ..",date:"2017-07-31T08:52:40.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-2017-07-31"},{slug:"Error-Shell-Script-Invocation-Error",title:"'Shell Script Invocation Error'",date:"2017-07-20T14:27:04.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-Shell-Script-Invocation-Error"},{slug:"Error-gesture",title:"tableViewCell的点击和tapGestureRecognizer冲突的处理",date:"2016-11-19T21:33:42.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-gesture"},{slug:"Error-崩溃分析",date:"2020-11-11T07:28:34.000Z",title:"崩溃分析(转载)",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-崩溃分析"},{slug:"Error-竖屏下视频全屏播放",title:"(转)竖屏下视频全屏播放",date:"2017-08-01T15:23:01.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-竖屏下视频全屏播放"},{slug:"Error-证书过期或者移除对app的影响",title:"证书过期或者移除对app的影响",date:"2018-01-11T13:49:33.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-证书过期或者移除对app的影响"}],children:[]},{folderName:"Objective-C",articles:[{slug:"Objective-C-KVO - Observe property of an object contained in a NSArray",title:"KVO - Observe property of an object contained in a NSArray",date:"2017-09-28 22:26",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-KVO - Observe property of an object contained in a NSArray"},{slug:"Objective-C-NSArrayFilter",title:"NSArray: filteredArrayUsingPredicate",date:"2017-09-14 16:24",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSArrayFilter"},{slug:"Objective-C-NSRecursiveLock",date:"2020-10-27T00:52:16.000Z",title:"NSRecursiveLock",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSRecursiveLock"},{slug:"Objective-C-NSStringCompareOptions",title:"NSStringCompareOptions",date:"2017-07-10T17:13:25.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSStringCompareOptions"},{slug:"Objective-C-containsObject-or-removeObject",title:"containsObject or removeObject",date:"2015年04月12日09:55:35",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-containsObject-or-removeObject"},{slug:"Objective-C-get-lunarholidays",title:"节气、节假日计算",date:"2017-07-13T09:30:26.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-get-lunarholidays"},{slug:"Objective-C-use-dispatch_queue_t-with-strong",title:"dispatch_queue_t 用strong来修饰",date:ak,path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-use-dispatch_queue_t-with-strong"},{slug:"Objective-C-农历",title:"农历",date:"2017-07-11T13:12:46.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-农历"},{slug:"Objective-C-常用的宏",title:"常用的宏",date:"2015-03-04 11:11",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-常用的宏"}],children:[]},{folderName:"StatusBar",articles:[{slug:"StatusBar-how-to-detect-touches-in-status-bar",title:"获取StatusBar的点击事件",date:an,path:"\u002Fwiki\u002FiOS\u002FStatusBar\u002FStatusBar-how-to-detect-touches-in-status-bar"},{slug:"StatusBar-ios-status-bar-style",title:"修改StatusBarStyle以及statusBar的背景颜色",date:an,path:"\u002Fwiki\u002FiOS\u002FStatusBar\u002FStatusBar-ios-status-bar-style"}],children:[]},{folderName:"UIKit",articles:[{slug:"UIKit-UIAlertController修改文字对齐方式",date:"2020-10-23T08:07:07.000Z",title:"UIAlertController修改文字对齐方式",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UIAlertController修改文字对齐方式"},{slug:"UIKit-UIDynamic Animator",title:"UIDynamic Animator",date:"2016-07-20T16:13:11.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UIDynamic Animator"},{slug:"UIKit-UISplit​View​Controller 学习笔记",title:"UISplit​View​Controller 学习笔记",date:"2017-04-07T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UISplit​View​Controller 学习笔记"},{slug:"UIKit-searchBar-style",title:"如何修改searchBar的样式",date:"2017-05-14T19:01:01.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-searchBar-style"},{slug:"UIKit-uioffset",title:"UIOffset",date:"2017-08-02T15:30:01.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-uioffset"},{slug:"UIKit-屏幕旋转.md",date:"2020-11-09T06:04:42.000Z",title:"屏幕旋转",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-屏幕旋转.md"},{slug:"UIKit-离屏渲染",title:"(转)关于iOS离屏渲染的深入研究",date:"2020-04-06T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-离屏渲染"},{slug:"UIKit-给WebView添加个粗糙的加载动画",title:"给UIWebView添加个粗糙的加载动画",date:"2017-02-10T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-给WebView添加个粗糙的加载动画"}],children:[]},{folderName:"UITextFeild",articles:[{slug:"UITextFeild-2018-01-16",title:"修改光标颜色和clear button的颜色",date:"2018-01-16T15:44:44.000Z",path:"\u002Fwiki\u002FiOS\u002FUITextFeild\u002FUITextFeild-2018-01-16"},{slug:"UITextFeild-uitextfeild-select-all",title:"默认选中文本",date:"2017-07-07 04:44",path:"\u002Fwiki\u002FiOS\u002FUITextFeild\u002FUITextFeild-uitextfeild-select-all"}],children:[]},{folderName:"keyboard",articles:[{slug:"keyboard-disable-3rd-keyboard",title:"禁用第三方键盘",date:am,path:"\u002Fwiki\u002FiOS\u002Fkeyboard\u002Fkeyboard-disable-3rd-keyboard"}],children:[]},{folderName:"loc",articles:[{slug:"loc-2018-01-22",title:"CLPlacemark中文",date:"2018-01-22T14:36:49.000Z",path:"\u002Fwiki\u002FiOS\u002Floc\u002Floc-2018-01-22"},{slug:"loc-sim-locaiton-ios",title:"真机或模拟器修改定位位置",date:"2017-08-11T10:29:01.000Z",path:"\u002Fwiki\u002FiOS\u002Floc\u002Floc-sim-locaiton-ios"}],children:[]},{folderName:"tableView",articles:[{slug:"tableView-cell-seprateLine",title:"cell分割线的颜色",date:"2017-08-08T15:26:14.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-cell-seprateLine"},{slug:"tableView-compare-NSIndexPath",title:"compare NSIndexPath",date:"2017-08-15T17:01:49.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-compare-NSIndexPath"},{slug:"tableView-tabeleView 获取某个cell的高度",title:"tabeleView 获取某个cell的高度",date:"2017-05-09T10:36:29.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-tabeleView 获取某个cell的高度"},{slug:"tableView-taleview-headerfooterView-xib",title:"xib UITableViewHeaderFooterView",date:"2017-08-18T09:47:36.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-taleview-headerfooterView-xib"},{slug:"tableView-结合layoutMargins做tableViewCell的适配",title:"结合layoutMargins做cell的适配",date:"2017-08-20T21:55:52.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-结合layoutMargins做tableViewCell的适配"}],children:[]},{folderName:"xib",articles:[{slug:"xib-如何替换已有的控件",title:"如何替换已有的控件",date:"2017-09-07T10:51:38.000Z",path:"\u002Fwiki\u002FiOS\u002Fxib\u002Fxib-如何替换已有的控件"}],children:[]},{folderName:"代码片段",articles:[{slug:"代码片段-分割小说章节",title:"分割小说章节",date:"2017-01-18T15:12:12.000Z",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-分割小说章节"},{slug:"代码片段-截图 截长图 高清图",title:"截图 截长图 高清图",date:"2016-05-04 22:38",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-截图 截长图 高清图"},{slug:"代码片段-读取未知类型的txt文件",title:"读取未知类型的txt文件 ",date:"2017-01-16 20:12",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-读取未知类型的txt文件"}],children:[]},{folderName:"包管理工具",articles:[{slug:"包管理工具-spm-introduce",date:"2020-11-18T08:08:33.000Z",title:"Swift Package Manager介绍",path:"\u002Fwiki\u002FiOS\u002F包管理工具\u002F包管理工具-spm-introduce"},{slug:"包管理工具-spm-resource-handle",date:"2020-11-19T00:58:59.000Z",title:"SWift Package Manager资源文件管理",path:"\u002Fwiki\u002FiOS\u002F包管理工具\u002F包管理工具-spm-resource-handle"}],children:[]},{folderName:"日历",articles:[{slug:"日历-FSCalendar",title:"FSCalendar",date:"2017-07-11T08:48:12.000Z",path:"\u002Fwiki\u002FiOS\u002F日历\u002F日历-FSCalendar"}],children:[]},{folderName:"适配",articles:[{slug:"适配-NFC初试",title:"NFC初试",date:"2017-06-07 18:31",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-NFC初试"},{slug:"适配-iOS11 Xcode9新功能新特性",title:"iOS11 Xcode9新功能新特性",date:ao,path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11 Xcode9新功能新特性"},{slug:"适配-iOS11 tableView适配不完全指南",title:"iOS11 tableView适配不完全指南",date:"2017-09-19 12:33",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11 tableView适配不完全指南"},{slug:L,date:M,title:N,path:ae},{slug:"适配-iOS11适配参考",title:"iOS11 适配参考",date:ao,path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11适配参考"},{slug:ag,date:ah,title:ai,path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS14hidesBottomBarWhenPushed兼容问题"},{slug:"适配-touch-id",title:"touch Id",date:"2017-08-04T13:46:10.000Z",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-touch-id"}],children:[]},{folderName:"问与答",articles:[{slug:"问与答-为什么ui操作要在主线程",date:"2020-11-16T03:38:48.000Z",title:"为什么ui操作要在主线程",path:"\u002Fwiki\u002FiOS\u002F问与答\u002F问与答-为什么ui操作要在主线程"}],children:[]}]}]}],fetch:{},mutations:aj}}("text","element","span","token","punctuation","\n","(",")","function"," ","comment","p","operator","-","API_AVAILABLE","ios","number","11.0","API_UNAVAILABLE","watchos",","," tvos",";","a","坑点","true",-1,"icon","icon-link","\n\n",2,"h2","code","class-name","ul","li","strong","适配-iOS11刘海屏EdgeProtect相关","2020-10-26T06:00:25.000Z","iOS11刘海屏EdgeProtect相关","edge-protect","Edge Protect","api","API","home-indicator-hidden","Home Indicator Hidden","https:\u002F\u002Fjuejin.im\u002Fpost\u002F6844903561298444295#heading-1","div","nuxt-content-highlight","pre","language-java","line-numbers","nullable ","UIViewController","*","keyword","void","br","\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11刘海屏EdgeProtect相关","2021-11-18T11:07:10.249Z","适配-iOS14hidesBottomBarWhenPushed兼容问题","2020-10-23T08:53:49.000Z","iOS14 hidesBottomBarWhenPushed兼容问题",void 0,"2017-08-31T09:32:08.000Z","2017-10-27T18:01:13.000Z","2017-08-19T16:10:51.000Z","2016-07-01T14:19:23.000Z","2017-09-20T15:20:33.000Z")));