__NUXT_JSONP__("/wiki/content/%E5%BE%85%E5%AD%A6%E4%B9%A0-HBDNavigationBar", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB){return {data:[{},{article:{slug:N,draft:true,date:O,title:L,toc:[{id:E,depth:x,text:E},{id:F,depth:A,text:F},{id:G,depth:A,text:G},{id:P,depth:A,text:Q},{id:H,depth:A,text:H},{id:R,depth:x,text:S},{id:I,depth:A,text:I},{id:J,depth:x,text:J},{id:T,depth:x,text:U},{id:V,depth:x,text:W},{id:X,depth:x,text:Y}],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003E 本文由 [简悦 SimpRead]("},{type:b,tag:e,props:{href:Z,rel:[l,m,n],target:o},children:[{type:a,value:Z}]},{type:a,value:") 转码， 原文地址 [github.com]("},{type:b,tag:e,props:{href:_,rel:[l,m,n],target:o},children:[{type:a,value:_}]},{type:a,value:")"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002FREADME_EN.md",rel:[l,m,n],target:o},children:[{type:a,value:"English Document"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UINavigationBar 是每一个 iOS 工程师都会遇到的坎，它令人抓狂的地方在于是否能随着页面切换而平滑地过渡到目的状态。想要把这件事情做好，不需要高深的算法，不需要深刻的底层原理，只需要一颗执着的内心。"}]},{type:a,value:c},{type:b,tag:y,props:{id:E},children:[{type:b,tag:e,props:{href:$,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:$},children:[]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"我们来看微信是如何平滑切换导航栏的状态的"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fweixin.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fweixin.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:p,props:{},children:[{type:a,value:K}]},{type:a,value:aa},{type:b,tag:p,props:{},children:[{type:a,value:B}]},{type:a,value:" 页面的导航栏具有不同的 barStyle 以及背景色"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"当从 "},{type:b,tag:p,props:{},children:[{type:a,value:B}]},{type:a,value:" 右滑返回 "},{type:b,tag:p,props:{},children:[{type:a,value:K}]},{type:a,value:" 页面时，NavigationBar 的背景被分成黑白两段，并且 bar 上的元素平滑切换，就和只有一个背景色时一样。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"仔细观察，"},{type:b,tag:p,props:{},children:[{type:a,value:K}]},{type:a,value:aa},{type:b,tag:p,props:{},children:[{type:a,value:B}]},{type:a,value:" 页面的导航栏背景颜色不一样，但是"},{type:b,tag:p,props:{},children:[{type:a,value:"都有毛玻璃效果"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:p,props:{},children:[{type:a,value:B}]},{type:a,value:" 页面往上滑动到一定程度时，导航栏会出现 shadowImage，此时如果右滑返回，导航栏依然在 "},{type:b,tag:p,props:{},children:[{type:a,value:B}]},{type:a,value:" 页保留 shadowImage，然而 "},{type:b,tag:p,props:{},children:[{type:a,value:K}]},{type:a,value:" 页面却没有这根线"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"不得不说，细节处理得真好"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"下面，我们来看一个反例，这是掘金 app 收藏页面的效果，当右滑返回上一个页面时，导航栏那反应实在是突兀，尖锐。"}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"特别说明，本人举掘金这个例子，纯粹是因为掘金是本人常用 app 之一"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fjuejin.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fjuejin.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"导航栏的平滑过渡，可以划分为以下情况"}]},{type:a,value:c},{type:b,tag:C,props:{id:F},children:[{type:b,tag:e,props:{href:ab,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ab},children:[]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"以下展示了平滑切换 shadowImage 的隐与现"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fshadow.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fshadow.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:C,props:{id:G},children:[{type:b,tag:e,props:{href:ac,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ac},children:[]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"以下展示导航栏有与无之间的平滑切换，和调用 "},{type:b,tag:f,props:{},children:[{type:a,value:"setNavigationBarHidden:animated:"}]},{type:a,value:" 的效果不一样哦"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fhidden.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fhidden.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:C,props:{id:P},children:[{type:b,tag:e,props:{href:ad,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ad},children:[]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"这种效果是不是比掘金好多了"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fgradient.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fgradient.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:C,props:{id:H},children:[{type:b,tag:e,props:{href:ae,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ae},children:[]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"看下面效果，导航栏背景的表现是不是和微信一样"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fbackground.gif",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fbackground.gif"},children:[]}]}]},{type:a,value:c},{type:b,tag:y,props:{id:R},children:[{type:b,tag:e,props:{href:af,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:af},children:[]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"上面这些效果是三个类共同协作的结果："}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"HBDNavigationBar 继承 UINavigationBar"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"HBDNavigationController 继承 UINavigationController， 内部使用了 HBDNavigationBar"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UIViewController(HBD) 是个分类，里面有一些可配置属性"}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"@property (nonatomic, assign) UIBarStyle hbd\\_barStyle;   \u002F\u002F 导航栏样式\n@property (nonatomic, strong) UIColor \\*hbd\\_barTintColor; \u002F\u002F 导航栏背景颜色\n@property (nonatomic, strong) UIImage \\*hbd\\_barImage;     \u002F\u002F 导航栏背景图片\n@property (nonatomic, strong) UIColor \\*hbd\\_tintColor;    \u002F\u002F 导航栏按钮颜色\n@property (nonatomic, strong) NSDictionary \\*hbd\\_titleTextAttributes; \u002F\u002F 导航栏标题属性\n@property (nonatomic, assign) float hbd\\_barAlpha;        \u002F\u002F 导航栏背景透明度\n@property (nonatomic, assign) BOOL hbd\\_barHidden;        \u002F\u002F 是否隐藏导航栏\n@property (nonatomic, assign) BOOL hbd\\_barShadowHidden;  \u002F\u002F 是否隐藏导航栏下面的阴影\n@property (nonatomic, assign) BOOL hbd\\_backInteractive;  \u002F\u002F 当前页面是否响应右滑返回，以及通过 \\`UINavigationBar\\` 的返回按钮返回，默认是 YES\n@property (nonatomic, assign) BOOL hbd\\_swipeBackEnabled; \u002F\u002F 当前页面是否可以右滑返回，默认是 YES\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"实际使用起来很简单"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"和使用普通的 "},{type:b,tag:f,props:{},children:[{type:a,value:"UINavigationBar"}]},{type:a,value:" 一样，定义全局样式："}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"\u002F\u002F AppDelegate.m\n- (BOOL)application:(UIApplication \\*)application didFinishLaunchingWithOptions:(NSDictionary \\*)launchOptions {\n\n    \\[\\[UINavigationBar appearance\\] setTintColor:UIColor.blackColor\\];\n    \u002F\u002F ...\n\n    return YES;\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用 "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" 代替 "},{type:b,tag:f,props:{},children:[{type:a,value:"UINavigationController"}]}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"DemoViewController \\*vc = \\[\\[DemoViewController alloc\\] init\\];\nself.window.rootViewController = \\[\\[HBDNavigationController alloc\\] initWithRootViewController:vc\\];\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果某个控制器的导航栏样式和全局样式有差异，可以使用 "},{type:b,tag:f,props:{},children:[{type:a,value:"UIViewController(HBD)"}]},{type:a,value:" 中的属性，在 "},{type:b,tag:f,props:{},children:[{type:a,value:"viewDidLoad"}]},{type:a,value:" 这个生命周期函数里进行微调。这是声明式 API，只需要设置有差异的样式即可，也不需要清理。"}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"@implementation DemoViewController\n- (void)viewDidLoad {\n    \\[super viewDidLoad\\];\n    \u002F\u002F 隐藏导航栏，就这样，不需要调用 setNavigationBarHidden:animated:\n    \u002F\u002F 也不需要担心其它页面会受到影响\n    self.hbd\\_barHidden = YES;\n}\n@end\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果你使用 storyboard, 除了设置 "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:"， 也别忘了设置 "},{type:b,tag:f,props:{},children:[{type:a,value:L}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fblob\u002Fmaster\u002Fscreenshot\u002Fstoryboard.jpg",rel:[l,m,n],target:o},children:[{type:b,tag:v,props:{alt:w,src:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar\u002Fraw\u002Fmaster\u002Fscreenshot\u002Fstoryboard.jpg"},children:[]}]}]},{type:a,value:c},{type:b,tag:C,props:{id:I},children:[{type:b,tag:e,props:{href:ag,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ag},children:[]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:z,props:{id:"hbd_barhidden"},children:[{type:b,tag:e,props:{href:ah,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ah},children:[]},{type:a,value:ai}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ai}]},{type:a,value:" 并不真正隐藏导航栏，只是把它变透明了，当然事件是可以穿透的，也正因为并不真正隐藏导航栏，才可以在导航栏有无之间平滑而优雅地切换"}]},{type:a,value:c},{type:b,tag:z,props:{id:"background-algorithm"},children:[{type:b,tag:e,props:{href:aj,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:aj},children:[]},{type:a,value:"Background algorithm"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一旦通过 "},{type:b,tag:f,props:{},children:[{type:a,value:"hbd_barImage"}]},{type:a,value:" 设置背景图片，"},{type:b,tag:f,props:{},children:[{type:a,value:ak}]},{type:a,value:" 就会失效"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"背景的计算规则如下："}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:"hbd_barImage 是否有值，如果有，将其设置为背景，否则下一步"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:"hbd_barTintColor 是否有值，如果有，将其设置为背景，否则下一步"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:"[[UINavigationBar appearance] backgroundImageForBarMetrics:UIBarMetricsDefault] 是否有返回值，如果有，将其设置为背景，否则下一步"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:"[UINavigationBar appearance].barTintColor 是否有值，如果有，将其设置为背景，否则下一步"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:"根据 barStyle 计算出默认的背景颜色，并将其设置为背景"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果使用图片来设置背景，并且希望带有透明度，使用带有透明度的图片即可。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果需要毛玻璃效果，那么设置给 "},{type:b,tag:f,props:{},children:[{type:a,value:ak}]},{type:a,value:" 的值应该带有透明度，具体数值根据色值的不同而不同。不要通过 "},{type:b,tag:f,props:{},children:[{type:a,value:"hbd_barAlpha"}]},{type:a,value:" 来调整毛玻璃效果，它是用来动态控制导航栏背景的透与暗的，就像掘金收藏页面那个效果一样。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"图片是没有毛玻璃效果的"}]},{type:a,value:c},{type:b,tag:z,props:{id:"aways-translucent"},children:[{type:b,tag:e,props:{href:al,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:al},children:[]},{type:a,value:"Aways translucent"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"本库重写了 UINavigationBar 的 "},{type:b,tag:f,props:{},children:[{type:a,value:"translucent"}]},{type:a,value:" 属性，使得它的值总是 YES。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"本库根据导航栏的背景是否含有透明度，自动调整 "},{type:b,tag:f,props:{},children:[{type:a,value:"UIViewController#edgesForExtendedLayout"}]},{type:a,value:" 这个属性。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果导航栏一开始是不透明的，由于后续操作而变透明，需要设置 "},{type:b,tag:f,props:{},children:[{type:a,value:"UIViewController#extendedLayoutIncludesOpaqueBars"}]},{type:a,value:am},{type:b,tag:f,props:{},children:[{type:a,value:an}]},{type:a,value:ao}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"\\- (void)viewDidLoad {\n    \\[super viewDidLoad\\];\n    \u002F\u002F 一开始导航栏为不透明\n    self.hbd\\_barTintColor = UIColor.whiteColor;\n    self.extendedLayoutIncludesOpaqueBars = YES;\n}\n\n- (void)handleScroll {\n    \u002F\u002F 由于用户操作而变透明\n    self.hbd\\_barAlpha = 0.5;\n    \\[self hbd\\_setNeedsUpdateNavigationBar\\];\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"基本原则就是如果我们设置的背景是含有透明度的，那么页面就应该位于 NavigationBar 底下 (under)，否则位于 NavigationBar 下面 (below)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果我们的 NavigationBar 一开始是不透明的，但有可能因为用户操作而变透明，那么设置 "},{type:b,tag:f,props:{},children:[{type:a,value:"extendedLayoutIncludesOpaqueBars"}]},{type:a,value:am},{type:b,tag:f,props:{},children:[{type:a,value:an}]},{type:a,value:ao}]},{type:a,value:c},{type:b,tag:z,props:{id:ap},children:[{type:b,tag:e,props:{href:aq,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:aq},children:[]},{type:a,value:ap}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"有时，我们需要在用户点击返回按钮或者侧滑返回时提醒用户，此时，可以重写以下方法，返回 NO"}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"\\- (BOOL)hbd\\_backInteractive {\n    \u002F\u002F show alert\n    return NO;\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{id:ar},children:[{type:b,tag:e,props:{href:as,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:as},children:[]},{type:a,value:ar}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果你需要隐藏状态栏，请配合 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDStatusBar",rel:[l,m,n],target:o},children:[{type:a,value:"HBDStatusBar"}]},{type:a,value:" 一起使用"}]},{type:a,value:c},{type:b,tag:z,props:{id:at},children:[{type:b,tag:e,props:{href:au,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:au},children:[]},{type:a,value:at}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"创建一个继承于 "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" 的子类，具体参考 FSPNavigationController"}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"\u002F\u002F FSPNavigationController.m\n@implementation FSPNavigationController\n\n- (void)viewDidLoad {\n    \\[super viewDidLoad\\];\n    \n    \u002F\u002F 获取系统自带滑动手势的target对象\n    id target = self.interactivePopGestureRecognizer.delegate;\n    \u002F\u002F 创建全屏滑动手势，调用系统自带滑动手势的 target 的 action 方法\n    UIPanGestureRecognizer \\*pan = \\[\\[UIPanGestureRecognizer alloc\\] initWithTarget:target action:@selector(handleNavigationTransition:)\\];\n    \u002F\u002F 设置手势代理，拦截手势触发\n    pan.delegate = self.interactivePopGestureRecognizer.delegate;\n    \u002F\u002F 给导航控制器的view添加全屏滑动手势\n    \\[self.view addGestureRecognizer:pan\\];\n    \u002F\u002F 禁止使用系统自带的滑动手势\n    self.interactivePopGestureRecognizer.enabled = NO;\n}\n\n@end\n"}]}]}]},{type:a,value:c},{type:b,tag:y,props:{id:J},children:[{type:b,tag:e,props:{href:av,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:av},children:[]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在完善导航栏相关功能时，查看了 GitHub 上十多个相关项目，其中给我帮助最大的是 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Fyiplee\u002FYPNavigationBarTransition",rel:[l,m,n],target:o},children:[{type:a,value:"YPNavigationBarTransition"}]},{type:a,value:"，它为我解决不同背景之间如何平滑切换提供了非常有价值的参考。"}]},{type:a,value:c},{type:b,tag:y,props:{id:T},children:[{type:b,tag:e,props:{href:aw,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:aw},children:[]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"iOS 9+"}]},{type:a,value:c},{type:b,tag:y,props:{id:V},children:[{type:b,tag:e,props:{href:ax,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ax},children:[]},{type:a,value:W}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"HBDNavigationBar is available through "},{type:b,tag:e,props:{href:"http:\u002F\u002Fcocoapods.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"CocoaPods"}]},{type:a,value:". To install it, simply add the following line to your Podfile:"}]},{type:a,value:c},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"pod 'HBDNavigationBar', '~\u003E 1.7.7'\n"}]}]}]},{type:a,value:c},{type:b,tag:y,props:{id:X},children:[{type:b,tag:e,props:{href:ay,ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:b,tag:e,props:{href:ay},children:[]},{type:a,value:Y}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"HBDNavigationBar is available under the MIT license. See the LICENSE file for more info."}]}]},dir:"\u002Fwiki\u002F0\u002F待学习",path:az,extension:".md",createdAt:aA,updatedAt:aA},prev:{slug:"Java-Collection及其衍生",date:"2020-10-23T06:09:35.000Z",title:"Collection及其衍生"},next:{slug:"奇淫巧技-实现类似前端的asyncawait方法",date:"2020-10-23T08:32:55.000Z",title:"实现类似前端的async、await方法"},scrollTop:aB,sideCategory:[{folderName:"0",articles:[{slug:"0-z",date:"2020-11-11T09:59:03.000Z",title:"待补充",path:"\u002Fwiki\u002F0\u002F0-z"},{slug:"0-搞懂git",date:"2020-11-13T03:14:51.000Z",title:"一文搞懂git",path:"\u002Fwiki\u002F0\u002F0-搞懂git"}],children:[{folderName:"待学习",articles:[{slug:N,date:O,title:L,path:az},{slug:"待学习-PromisKit",date:"2020-10-23T08:42:16.000Z",title:"PromisKit",path:"\u002Fwiki\u002F0\u002F待学习\u002F待学习-PromisKit"},{slug:"待学习-apns指南",date:"2020-10-26T05:47:15.000Z",title:"Apns指南",path:"\u002Fwiki\u002F0\u002F待学习\u002F待学习-apns指南"},{slug:"待学习-rumtime源码解读",date:"2020-11-18T08:42:16.000Z",title:"rumtime源码解读",path:"\u002Fwiki\u002F0\u002F待学习\u002F待学习-rumtime源码解读"},{slug:"待学习-then",date:"2020-10-23T08:42:25.000Z",title:"Then",path:"\u002Fwiki\u002F0\u002F待学习\u002F待学习-then"},{slug:"待学习-iOS14隐私适配及部分解决方案",date:"2020-10-23T09:09:09.000Z",title:"iOS14隐私适配及部分解决方案",path:"\u002Fwiki\u002F0\u002F待学习\u002F待学习-iOS14隐私适配及部分解决方案"}],children:[]},{folderName:"书单",articles:[{slug:"书单-参考书单",date:"2020-11-11T09:53:19.000Z",title:"(转载)书单",path:"\u002Fwiki\u002F0\u002F书单\u002F书单-参考书单"}],children:[]}]}]}],fetch:{},mutations:aB}}("text","element","\n","p","a","code","true",-1,"span","icon","icon-link","nofollow","noopener","noreferrer","_blank","strong","div","nuxt-content-highlight","pre","language-text","line-numbers","img","",2,"h2","h4",3,"收藏","h3","li","介绍","阴影显示与隐藏","导航栏有与无","控制器拥有不同的导航栏背景","注意事项以及限制","感谢","我","HBDNavigationBar","HBDNavigationController","待学习-HBDNavigationBar","2020-10-23T08:26:24.000Z","导航栏背景透明度随-uiscrollview-滚动变化","导航栏背景透明度随 UIScrollView 滚动变化","usage","Usage","requirements","Requirements","installation","Installation","license","License","http:\u002F\u002Fksria.com\u002Fsimpread\u002F","https:\u002F\u002Fgithub.com\u002Flistenzz\u002FHBDNavigationBar","#%E4%BB%8B%E7%BB%8D"," 页面和 ","#%E9%98%B4%E5%BD%B1%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F","#%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%9C%89%E4%B8%8E%E6%97%A0","#%E5%AF%BC%E8%88%AA%E6%A0%8F%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E9%9A%8F-uiscrollview-%E6%BB%9A%E5%8A%A8%E5%8F%98%E5%8C%96","#%E6%8E%A7%E5%88%B6%E5%99%A8%E6%8B%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AF%BC%E8%88%AA%E6%A0%8F%E8%83%8C%E6%99%AF","#usage","#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E4%BB%A5%E5%8F%8A%E9%99%90%E5%88%B6","#hbd_barhidden","hbd_barHidden","#background-algorithm","hbd_barTintColor","#aways-translucent"," 的值为 ","YES","。","拦截返回事件","#%E6%8B%A6%E6%88%AA%E8%BF%94%E5%9B%9E%E4%BA%8B%E4%BB%B6","隐藏状态栏","#%E9%9A%90%E8%97%8F%E7%8A%B6%E6%80%81%E6%A0%8F","全屏返回","#%E5%85%A8%E5%B1%8F%E8%BF%94%E5%9B%9E","#%E6%84%9F%E8%B0%A2","#requirements","#installation","#license","\u002Fwiki\u002F0\u002F待学习\u002F待学习-HBDNavigationBar","2021-08-24T00:34:40.871Z",void 0)));