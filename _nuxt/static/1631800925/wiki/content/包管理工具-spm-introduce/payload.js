__NUXT_JSONP__("/wiki/content/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-spm-introduce", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO){return {data:[{},{article:{slug:aX,draft:false,date:aY,title:aZ,toc:[{id:a_,depth:ac,text:a$},{id:as,depth:D,text:as},{id:ba,depth:ac,text:bb},{id:at,depth:D,text:at},{id:au,depth:D,text:au},{id:av,depth:D,text:av},{id:bc,depth:D,text:bd},{id:be,depth:ac,text:bf},{id:bg,depth:D,text:bh},{id:bi,depth:D,text:bj},{id:bk,depth:D,text:bl},{id:bm,depth:D,text:bn},{id:aw,depth:ac,text:aw},{id:ax,depth:D,text:ax},{id:bo,depth:D,text:bp},{id:bq,depth:D,text:aJ},{id:br,depth:D,text:bs},{id:bt,depth:D,text:bu},{id:bv,depth:ac,text:bw},{id:bx,depth:D,text:by},{id:ay,depth:D,text:ay},{id:az,depth:D,text:az},{id:bz,depth:D,text:bA},{id:aA,depth:D,text:aA},{id:bB,depth:ac,text:bC},{id:bD,depth:ac,text:bE},{id:bF,depth:D,text:bG},{id:bH,depth:D,text:bI},{id:bJ,depth:D,text:bK},{id:aB,depth:ac,text:aB}],body:{type:"root",children:[{type:b,tag:bL,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:m,props:{href:bM,rel:[K,L,M],target:N},children:[{type:a,value:bM}]},{type:a,value:"    2019年12月13日\n"},{type:b,tag:m,props:{href:bN,rel:[K,L,M],target:N},children:[{type:a,value:bN}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"SPM是苹果官方推出的包管理工具。从Xcode11开始,有对SPM的插件加成。 这个包管理工具包含在swift3或者更高版本中。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:a_},children:[{type:b,tag:m,props:{href:"#swiftpm-%E6%98%AF%E4%BB%80%E4%B9%88",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:a$}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Swift Package Manager 是一个苹果官方出的管理源代码分发的工具，目的是更简单的使用别人共享的代码。它会直接处理包之间的依赖管理、版本控制、编译和链接。从总体功能上来说，和 iOS 平台上的 Cocoapods、Carthage 一样。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"一开始 SwiftPM 只支持在 MacOS 和 Linux 平台使用，大多是一些 Vapor、Perfect 之类的后端服务或者脚本在用，所以对于 iOS 开发者来说会比较陌生。Xcode 11 开始自集成了 "},{type:b,tag:g,props:{},children:[{type:a,value:bO}]},{type:a,value:"，这样一来，iOS、watchOS、tvOS 等平台也都可以使用了，不过由于是集成的依赖库，所以使用方法有些不太一样，下面会另说。文中不说哪个平台的使用默认是指 MacOS 和 Linux 平台。"}]},{type:a,value:f},{type:b,tag:E,props:{id:as},children:[{type:b,tag:m,props:{href:"#%E6%A6%82%E5%BF%B5",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:as}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:al,props:{},children:[{type:a,value:"Modules"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Swift将代码组织到模块中。每个模块都指定一个名称空间，并强制执行访问控制，以便可以在模块外部访问使用。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"程序可以将所有代码都放在一个模块中，也可以将其他模块作为依赖项导入。除了少数系统提供的模块外，例如macOS上的Darwin或Linux上的Glibc，大多数依赖项都需要下载并构建代码才能使用。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"当您为解决特定问题的代码使用单独的模块时，该代码可以在其他情况下复用。使用模块，您可以在其他开发者的代码的基础上构建代码，而不必自己从头开始实现。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:al,props:{},children:[{type:a,value:"Packages"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"一个Package由Swift源文件和清单(manifest)文件组成。清单(manifest)文件称为Package.swift，它使用"},{type:b,tag:g,props:{},children:[{type:a,value:x}]},{type:a,value:"模块定义了包的名称及其内容。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"每个Package中有一个或多个targets。每个targets都指定一个product，并可以声明一个或多个依赖项。"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,aC]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002FPackage.swift 举例"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bP}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bQ}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"dealer\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"package"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:"url"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"https:\u002F\u002Fgithub.com\u002Fapple\u002Fexample-package-deckofplayingcards.git\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" from"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"3.0.0\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:"\n            name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n            dependencies"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"DeckOfPlayingCards\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:al,props:{},children:[{type:a,value:"Products"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"一个target可以构建library或可执行文件作为其Product。一个library包含一个可以被其他Swift代码导入的模块。可执行文件是可以由操作系统运行的程序。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:al,props:{},children:[{type:a,value:"Dependencies"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"target的依赖项，依赖是一个递归的过程。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:ba},children:[{type:b,tag:m,props:{href:"#swiftpm-%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bb}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"SwiftPM 管理的每个 "},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:"相当于 Xcode.Project，并且有具体的代码定义，包的目录下必须含有 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:aL},{type:b,tag:g,props:{},children:[{type:a,value:"Sources"}]},{type:a,value:"代码文件夹（链接系统的包除外）。"},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 是整个 Package 的配置项，类似 Cocoapods 中 "},{type:b,tag:g,props:{},children:[{type:a,value:".podspec"}]},{type:a,value:aL},{type:b,tag:g,props:{},children:[{type:a,value:".podfile"}]},{type:a,value:" 的集合体。下面介绍下 SwiftPM 的简单创建和使用。"}]},{type:a,value:f},{type:b,tag:E,props:{id:at},children:[{type:b,tag:m,props:{href:"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8C%85",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:at}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"执行以下命令"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"➜  mkdir MyPackage\n➜  cd MyPackage\n➜  swift package init --type executable\n➜  swift build\n➜  swift run\nHello, World!\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这里在创建时使用了 "},{type:b,tag:g,props:{},children:[{type:a,value:"--type"}]},{type:a,value:" 参数，通过执行 "},{type:b,tag:g,props:{},children:[{type:a,value:"help"}]},{type:a,value:" 命令可得知，一共有四个类型"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"--type empty|library|executable|system-module"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"分别是 空包、静态包、可执行包、系统包，默认不加参数时创建的是 "},{type:b,tag:g,props:{},children:[{type:a,value:aD}]},{type:a,value:" 类型，主要区别如下："}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"空包：Source 文件夹下什么都没有，也不能编译"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"静态包：Source 文件夹下有个和包同名 swift 文件，里面有个空结构体"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"可执行包：Source 文件夹下有个 "},{type:b,tag:g,props:{},children:[{type:a,value:aE}]},{type:a,value:" 文件，在 build 之后会在 .build\u002Fdebug\u002F 目录下生成一个可执行文件，可通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"swift run"}]},{type:a,value:" 或者直接点击运行，从而启动一个进程"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"系统包：这种包是专门为了链接系统库（例如 "},{type:b,tag:g,props:{},children:[{type:a,value:"libgit"}]},{type:a,value:aM},{type:b,tag:g,props:{},children:[{type:a,value:"jpeglib"}]},{type:a,value:aM},{type:b,tag:g,props:{},children:[{type:a,value:"mysql"}]},{type:a,value:" 这种系统库）准备的，本身不需要任何代码，所以也没有 Source 文件夹，但是需要编辑 "},{type:b,tag:g,props:{},children:[{type:a,value:aF}]},{type:a,value:" 文件去查找系统库路径 (Swift 4.2 已经被其他方式取代)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这里的几个类型只是根据标志性文件定义，比如静态包默认是不能编译的，但是加了 "},{type:b,tag:g,props:{},children:[{type:a,value:aE}]},{type:a,value:" 之后，就变成可执行包了。"}]},{type:a,value:f},{type:b,tag:E,props:{id:au},children:[{type:b,tag:m,props:{href:"#%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:au}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"如果需要依赖其他的包， 需要在 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 定义依赖项和版本，像下面这样："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002F\u002F swift-tools-version:4.2\n\u002F\u002F The swift-tools-version declares the minimum version of Swift required to build this package.\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"WYMobileWebsite\",\n    dependencies: [\n        .package(url: \"https:\u002F\u002Fgithub.com\u002FPerfectlySoft\u002FPerfect-HTTPServer.git\", from: \"3.0.0\"),\n        .package(url:\"https:\u002F\u002Fgithub.com\u002FPerfectlySoft\u002FPerfect-MySQL.git\", from: \"3.0.0\"),\n        .package(url:\"https:\u002F\u002Fgithub.com\u002FPerfectlySoft\u002FPerfect-Session.git\", from: \"3.0.0\")\n    ],\n    targets: [\n        \u002F\u002F Targets are the basic building blocks of a package. A target can define a module or a test suite.\n        \u002F\u002F Targets can depend on other targets in this package, and on products in packages which this package depends on.\n        .target(\n            name: \"WYMobileWebsite\",\n            dependencies: [\"PerfectHTTPServer\",\"PerfectMySQL\",\"PerfectSession\"]),\n        .testTarget(\n            name: \"WYMobileWebsiteTests\",\n            dependencies: [\"WYMobileWebsite\"]),\n    ]\n)\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"需要注意的是 "},{type:b,tag:al,props:{},children:[{type:a,value:"最上面那行注释不要删，它是用来查找对应的 swift-tool-version 版本的"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:bX},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 配置之后，再执行下 "},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:" 之后就会生成 .build 文件夹， "},{type:b,tag:g,props:{},children:[{type:a,value:bY}]},{type:a,value:" 文件夹的代码里也就可以 "},{type:b,tag:g,props:{},children:[{type:a,value:"import Perfect"}]},{type:a,value:" 了"}]},{type:a,value:f},{type:b,tag:E,props:{id:av},children:[{type:b,tag:m,props:{href:"#%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E4%BE%9D%E8%B5%96%E5%8C%85",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:av}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"编写 MacOS\u002FLinux 程序时经常会遇到依赖本地系统库的情况，在官方文档上有很长一段文字描述如何设置系统库依赖的，需要建立一个专门用来链接系统库的包，但是在 Swift 4.2 之后已经被替代了（但是老的写法暂时也还能用）。比较有趣的是，这个更改已经在 2018 年 9 月 的 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager\u002Fblob\u002F263171977ebcd47f4aaca1202cff5a96c5158a64\u002FDocumentation\u002FUsage.md#import-system-libraries",rel:[K,L,M],target:N},children:[{type:a,value:"提交"}]},{type:a,value:" 就已经更新到 github 了，代码实现已经合并到 master，但是文档没更新到 master.readme，对之前写法感兴趣的可以去看看这个 [链接](warning: system packages are deprecated; use system library targets instead)。下面主要介绍新的写法。"}]},{type:a,value:f},{type:b,tag:aH,props:{id:"下载依赖的-c-库到本地"},children:[{type:b,tag:m,props:{href:"#%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E7%9A%84-c-%E5%BA%93%E5%88%B0%E6%9C%AC%E5%9C%B0",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:"下载依赖的 C 库到本地"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"如果要添加系统依赖库，首先得本地有系统库，以 "},{type:b,tag:g,props:{},children:[{type:a,value:"Cairo"}]},{type:a,value:" 这个 2D 图形库为例（官方文档是用这个做例子的，我就照抄过来了，而且这个库不需要什么环境变量），先通过 gem 或者 homebrew 下载库到本地，以 homebrew 为例"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"brew install cairo"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"下载完成后在 "},{type:b,tag:g,props:{},children:[{type:a,value:bZ}]},{type:a,value:" 文件夹下就能找到 "},{type:b,tag:g,props:{},children:[{type:a,value:"cairo.pc"}]},{type:a,value:" 文件，这个配置文件用于找寻系统库的 lib 和 header 文件。有的库通过 homebrew 下载后并不会自动添加到 "},{type:b,tag:g,props:{},children:[{type:a,value:bZ}]},{type:a,value:" 这个地址（比如 mysql 这个 zz），需要通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"ln- s"}]},{type:a,value:" 命令把具体目录地址的文件复制一份放在这里。"}]},{type:a,value:f},{type:b,tag:aH,props:{id:b_},children:[{type:b,tag:m,props:{href:"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8C%85%E4%BD%9C%E4%B8%BA%E4%B8%BB%E5%8C%85",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:b_}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"➜  mkdir example\n➜  cd example\n➜  swift package init --type executable\n"}]}]}]},{type:a,value:f},{type:b,tag:aH,props:{id:b$},children:[{type:b,tag:m,props:{href:"#%E5%88%9B%E5%BB%BA%E7%B3%BB%E7%BB%9F%E4%BE%9D%E8%B5%96%E6%96%87%E4%BB%B6%E5%B9%B6%E7%BC%96%E8%BE%91",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:b$}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"cd Sources \nmkdir cairo \ncd cairo \ntouch cairo.h \ntouch module.modulemap\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"此时文件目录变成这样："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:".\n├── Package.swift\n├── README.md\n├── Sources\n│   ├── cairo\n│   │   ├── cairo.h\n│   │   └── module.modulemap\n│   └── example\n│       └── main.swift\n└── Tests\n    ├── LinuxMain.swift\n    └── exampleTests\n        ├── XCTestManifests.swift\n        └── exampleTests.swift\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:bX},{type:b,tag:g,props:{},children:[{type:a,value:ca}]},{type:a,value:" 中添加这行代码："},{type:b,tag:g,props:{},children:[{type:a,value:"#include \u003Ccairo.h\u003E"}]},{type:a,value:"，在 "},{type:b,tag:g,props:{},children:[{type:a,value:aF}]},{type:a,value:" 中添加下面这行代码"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"module Foo {\n    umbrella header \"cairo.h\"\n    link \"cairo\"\n}\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这里 "},{type:b,tag:g,props:{},children:[{type:a,value:ap}]},{type:a,value:" 这个 moduleName 我们想怎么写都行，等下在 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 要写的也是这个名字。第一行标明我们头文件名，就是我们刚才创建的 "},{type:b,tag:g,props:{},children:[{type:a,value:ca}]},{type:a,value:" 文件，第二行的 "},{type:b,tag:g,props:{},children:[{type:a,value:"link"}]},{type:a,value:" 是系统库的编译链接标记，给 Clang 用的，不能随意更改。"}]},{type:a,value:f},{type:b,tag:aH,props:{id:cb},children:[{type:b,tag:m,props:{href:"#%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E4%BE%9D%E8%B5%96%E8%BF%9B%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8C%85%E9%87%8C",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:cb}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cc},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 文件，添加 "},{type:b,tag:g,props:{},children:[{type:a,value:ap}]},{type:a,value:" 进去："}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:"img",props:{alt:"",src:"https:\u002F\u002Fuser-gold-cdn.xitu.io\u002F2019\u002F12\u002F13\u002F16efde4a67d7416f?imageView2\u002F0\u002Fw\u002F1280\u002Fh\u002F960\u002Fformat\u002Fwebp\u002Fignore-error\u002F1"},children:[]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cc},{type:b,tag:g,props:{},children:[{type:a,value:aE}]},{type:a,value:k}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"import Foo\n\nlet surface: OpaquePointer = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 120, 120)\nprint(surface)\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"然后编译项目（正常情况下不会报错）："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"➜  example swift build\n[2\u002F2] Linking .\u002F.build\u002Fx86_64-apple-macosx\u002Fdebug\u002Fexample\n➜  example swift run\n0x00007f8dfbd007c0\n➜  example\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:aF}]},{type:a,value:" 文件中可以添加多个 "},{type:b,tag:g,props:{},children:[{type:a,value:"module"}]},{type:a,value:"，所以可以比较方便的添加多个系统库。还有些系统库需要注意的点例如系统库的版本号之类的可以查看 github 上的 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager\u002Fblob\u002Fmaster\u002FDocumentation\u002FUsage.md#system-libraries-with-optional-dependencies",rel:[K,L,M],target:N},children:[{type:a,value:"说明"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:E,props:{id:bc},children:[{type:b,tag:m,props:{href:"#%E9%87%87%E7%94%A8-xcode-%E8%BF%90%E8%A1%8C",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bd}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"我们编写代码可以通过 VSCode、Atom 加入各种插件甚至 txt 文本编辑器写，但是肯定还是 Xcode 用起来比较方便，默认 swift build 是不会生成 "},{type:b,tag:g,props:{},children:[{type:a,value:"packageName.xcodeproj"}]},{type:a,value:" 这种 Xcode 可以直接打开的工程文件，但是可以通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"swift package generate-xcodeproj"}]},{type:a,value:" 命令行生成一个 "},{type:b,tag:g,props:{},children:[{type:a,value:".xcodeproj"}]},{type:a,value:" 文件，然后就可以通过 Xcode 运行该项目了，如果需要配置什么环境变量，则需要通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"Build Setting"}]},{type:a,value:" 中的选项配。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"需要注意的一点事，通过 swift run 和通过 Xcode 启动的是不同的进程，两种方式生成的可执行文件并不是同一个，所以如果需要把可执行文件更新到其他地方的时候注意别弄错了。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:be},children:[{type:b,tag:m,props:{href:"#%E8%A7%A3%E6%9E%90-package",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bf}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:" 类一般用在 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 里来表标记当前使用的包。"},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:" 类里有很多属性，像 "},{type:b,tag:g,props:{},children:[{type:a,value:"pkgConfig"}]},{type:a,value:aM},{type:b,tag:g,props:{},children:[{type:a,value:"providers"}]},{type:a,value:" 这些都是上文说到的 Swift 4.2 之前 "},{type:b,tag:g,props:{},children:[{type:a,value:"System package"}]},{type:a,value:"所用到的。Swift 5.0 后基本也不会用到了，下面只介绍些平常可能会用到的属性。"}]},{type:a,value:f},{type:b,tag:E,props:{id:bg},children:[{type:b,tag:m,props:{href:"#packagesupportedplatform",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bh}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这个 "},{type:b,tag:g,props:{},children:[{type:a,value:"Struct"}]},{type:a,value:" 用于设置包的最小依赖平台版本，具体 API 定义可以进入代码文档中查看，下面给出示例："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"let package = Package(\n    name: \"example\",\n    platforms: [.macOS(.v10_10)],\n    dependencies: [\n         .package(url:\"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", .branch(\"master\"))\n    ],\n    \n    targets: [\n        .systemLibrary(name: \"Foo\", path: \"Sources\u002Fcairo\", pkgConfig: \"cairo\"),\n        .target(\n            name: \"example\",\n            dependencies: [\"Foo\", \"Alamofire\"]),\n        .testTarget(\n            name: \"exampleTests\",\n            dependencies: [\"example\"]),\n    ]\n)\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"需要注意的是虽然这个属性是个数组，但是目的是为了让设置不同平台的最小依赖，如果设置了多个同平台的值进去，就会报错，例如这样："},{type:b,tag:g,props:{},children:[{type:a,value:"[.macOS(.v10_10), .macOS(.v10_11)],"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"error: manifest parse error(s):found multiple declaration for the platform: macos"}]}]},{type:a,value:f},{type:b,tag:E,props:{id:bi},children:[{type:b,tag:m,props:{href:"#packageproduct",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bj}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Product 是 Package 编译后对外的产品输出，一般可分为两种类型："}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"可执行文件"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"静态库或者动态库"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"具体 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 配置如下"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,aC]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F swift-tools-version:5.0"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F The swift-tools-version declares the minimum version of Swift required to build this package."}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bP}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bQ}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F Products define the executables and libraries produced by a package, and make them visible to other packages."}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F需要有目录 Sources\u002Ftool"}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"  "},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F需要有目录 Sources\u002FPaper"}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"PaperStatic\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cd},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"\"PaperDynamic\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cd},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"dynamic"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F Dependencies declare other packages that this package depends on."}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F .package(url: \u002F* package url *\u002F, from: \"1.0.0\"),"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:bW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F Targets are the basic building blocks of a package. A target can define a module or a test suite."}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F Targets can depend on other targets in this package, and on products in packages which this package depends on."}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"\n       "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"当执行完 "},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:" 之后，就会在 "},{type:b,tag:g,props:{},children:[{type:a,value:".build\u002Fdebug"}]},{type:a,value:" 下生成对应的可执行文件 "},{type:b,tag:g,props:{},children:[{type:a,value:"tool"}]},{type:a,value:" 和静态库 "},{type:b,tag:g,props:{},children:[{type:a,value:"libPaperStatic.a"}]},{type:a,value:"、动态库 "},{type:b,tag:g,props:{},children:[{type:a,value:"libPaperDynamic.dylib"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"再来看下 "},{type:b,tag:g,props:{},children:[{type:a,value:"Product"}]},{type:a,value:" 这个类的构造（去除了 暂时不关心的 "},{type:b,tag:g,props:{},children:[{type:a,value:"encode"}]},{type:a,value:" 等方法）："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002F\u002F\u002F Defines a product in the package.\npublic class Product : Encodable {\n\n    \u002F\u002F\u002F Represents an executable product.\n  final public class Executable : PackageDescription.Product {\n\n        \u002F\u002F\u002F The names of the targets in this product.\n        public let targets: [String]\n    }\n     \u002F\u002F\u002F Represents a library product.\n    final public class Library : PackageDescription.Product {\n\n        \u002F\u002F\u002F The type of library product.\n        public enum LibraryType : String, Encodable {\n\n            case `static`\n\n            case dynamic\n        }\n\n        \u002F\u002F\u002F The names of the targets in this product.\n        public let targets: [String]\n\n        \u002F\u002F\u002F The type of the library.\n        \u002F\u002F\u002F\n        \u002F\u002F\u002F If the type is unspecified, package manager will automatically choose a type.\n        public let type: PackageDescription.Product.Library.LibraryType?\n\n    }\n\n   \u002F\u002F\u002F Create a library product.\n    public static func library(name: String, type: PackageDescription.Product.Library.LibraryType? = nil, targets: [String]) -\u003E PackageDescription.Product\n\n    \u002F\u002F\u002F Create an executable product.\n    public static func executable(name: String, targets: [String]) -\u003E PackageDescription.Product\n}\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"注意下 "},{type:b,tag:g,props:{},children:[{type:a,value:"Library.type"}]},{type:a,value:" 属性，看注释文档上写的是如果没写类型的话，就会自动选一个。苹果推荐如果当前库支持打成静态库或者动态库的任意一种的话，就不要指定类型，让 SwiftPM 在最终编译产品时根据编译设置自动选择静态库或者动态库。"}]},{type:a,value:f},{type:b,tag:E,props:{id:bk},children:[{type:b,tag:m,props:{href:"#packagedependencies",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bl}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:ce}]},{type:a,value:" 用于添加包的依赖，一般是包括指向包源的 "},{type:b,tag:g,props:{},children:[{type:a,value:"git"}]},{type:a,value:" 路径和版本环境，或指向依赖包的本地路径（至于使用 SVN 路径这种方式没接触过，可能需要自定义一些东西）。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"在执行 "},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:" 时会自动执行一个 "},{type:b,tag:g,props:{},children:[{type:a,value:cf}]},{type:a,value:" 命令，该命令会解析 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 的依赖，并生成对应的 "},{type:b,tag:g,props:{},children:[{type:a,value:"package.resolved"}]},{type:a,value:" 文件，下面有介绍。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"先简单看下 "},{type:b,tag:g,props:{},children:[{type:a,value:_}]},{type:a,value:" 的 API"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"public static func package(url: String, from version: PackageDescription.Version) -\u003E PackageDescription.Package.Dependency\n\npublic static func package(url: String, _ requirement: PackageDescription.Package.Dependency.Requirement) -\u003E PackageDescription.Package.Dependency\n\npublic static func package(url: String, _ range: Range\u003CPackageDescription.Version\u003E) -\u003E PackageDescription.Package.Dependency\n\npublic static func package(url: String, _ range: ClosedRange\u003CPackageDescription.Version\u003E) -\u003E PackageDescription.Package.Dependency\n\n\u002F\u002F\u002F Add a dependency to a local package on the filesystem.\npublic static func package(path: String) -\u003E PackageDescription.Package.Dependency\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"先不用一个一个方法看，现在主要说下第二个方法"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"public static func package(url: String, _ requirement: PackageDescription.Package.Dependency.Requirement) -\u003E PackageDescription.Package.Dependency"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"先说它是因为其他几个方法都是这个方法抽象出来的简便创建方式。"}]},{type:a,value:f},{type:b,tag:bL,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cg},{type:b,tag:g,props:{},children:[{type:a,value:am}]},{type:a,value:" 这个结构体，它实现了 "},{type:b,tag:g,props:{},children:[{type:a,value:ch}]},{type:a,value:"，所以可以直接用字符串字面量表示，同时也实现了 "},{type:b,tag:g,props:{},children:[{type:a,value:"Comparable"}]},{type:a,value:" 协议，所以可以直接用 "},{type:b,tag:g,props:{},children:[{type:a,value:ci}]},{type:a,value:" 比较大小，用 "},{type:b,tag:g,props:{},children:[{type:a,value:"..\u003C"}]},{type:a,value:aL},{type:b,tag:g,props:{},children:[{type:a,value:"..."}]},{type:a,value:" 表示范围。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"看下 "},{type:b,tag:g,props:{},children:[{type:a,value:"Package.Dependency.Requirement"}]}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,aC]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:cj}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aO}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"_exactItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"_rangeItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"Range"}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"_revisionItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"_branchItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:" _localPackageItem\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aP}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ck}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cl}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aO}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F The requirement is specified by an exact version."}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F example: .exact(\"1.2.3\")"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"exact"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,aQ]},children:[{type:a,value:aR}]},{type:a,value:" version"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F The requirement is specified by a source control revision."}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F example: .revision(\"e74b07278b926c9ec6f9643455ea00d1ce04a021\")"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"revision"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,aQ]},children:[{type:a,value:aR}]},{type:a,value:" ref"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F The requirement is specified by a source control branch."}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F example: .branch(\"develop\")"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"branch"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,aQ]},children:[{type:a,value:aR}]},{type:a,value:" name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:cm}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F and going upto next major version."}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F example: .upToNextMajor(from: \"1.2.3\")"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:cn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:cm}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F and going upto next minor version."}]},{type:a,value:"\n   "},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F example: .upToNextMinor(from: \"1.2.3\")"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:co}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:cn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aP}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"直接从枚举的定义中就可以看出 "},{type:b,tag:g,props:{},children:[{type:a,value:ce}]},{type:a,value:" 支持如下五种方式："}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"git 源 + 确定的版本号"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"git 源 + 版本区间"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"git 源 + Commit 号"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"git 源 + 分支名"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"本地路径"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cg},{type:b,tag:g,props:{},children:[{type:a,value:ck}]},{type:a,value:" 里的几个方法也只是一个便捷函数，方法注释里已经有相应的使用示例，"},{type:b,tag:g,props:{},children:[{type:a,value:aS}]},{type:a,value:" 表示从某个版本到下个主要版本之前，比如 "},{type:b,tag:g,props:{},children:[{type:a,value:".upToNextMajor(from: \"1.2.3\")"}]},{type:a,value:" 表示 SwiftPM 选择的版本可能是 "},{type:b,tag:g,props:{},children:[{type:a,value:"1.2.3"}]},{type:a,value:" 或者 "},{type:b,tag:g,props:{},children:[{type:a,value:"1.3.5"}]},{type:a,value:"，但是不会选择 "},{type:b,tag:g,props:{},children:[{type:a,value:"2.0.0"}]},{type:a,value:" 以及以上版本。"},{type:b,tag:g,props:{},children:[{type:a,value:co}]},{type:a,value:" 指的是次要版本，也就是第二位数字，这两个方法也都会转为 "},{type:b,tag:g,props:{},children:[{type:a,value:"_rangeItem(Range\u003CPackageDescription.Version\u003E)"}]},{type:a,value:" 这个枚举值。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"再回头看下之前说的先不用管的 "},{type:b,tag:g,props:{},children:[{type:a,value:aT}]},{type:a,value:" 的几个 "},{type:b,tag:g,props:{},children:[{type:a,value:cp}]},{type:a,value:"，它们内部也是转化成这个 "},{type:b,tag:g,props:{},children:[{type:a,value:af}]},{type:a,value:" 这个枚举的（不信的自己去看源码），"}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"public static func package(url: String, from version: PackageDescription.Version) -\u003E PackageDescription.Package.Dependency"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这个方法是通过 "},{type:b,tag:g,props:{},children:[{type:a,value:aS}]},{type:a,value:" 转换成 "},{type:b,tag:g,props:{},children:[{type:a,value:cq}]},{type:a,value:"_rangeItem，这就意味着这个方法会选择某个版本号到下个主版本号之前的版本"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"public static func package(url: String, _ range: Range\u003CPackageDescription.Version\u003E) -\u003E PackageDescription.Package.Dependency"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这个方法是直接转换成 "},{type:b,tag:g,props:{},children:[{type:a,value:cq}]},{type:a,value:"_rangeItem，所以它可是无视主版本号、次版本号控制这种隐形规则的"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"public static func package(path: String) -\u003E PackageDescription.Package.Dependency"}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这个方法是转换成 "},{type:b,tag:g,props:{},children:[{type:a,value:"Requirement._localPackageItem"}]},{type:a,value:aU}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"看完了上面的介绍，平常的使用方式如下所示："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:".package(url: \"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", .exact(\"1.2.3\")),\n.package(url:\"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", .branch(\"master\")),\n.package(url:\"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", from: \"1.2.3\"),\n.package(url: \"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", .revision(\"e74b07278b926c9ec6f9643455ea00d1ce04a021\"),\n.package(url: \"https:\u002F\u002Fgithub.com\u002FAlamofire\u002FAlamofire.git\", \"1.2.3\"...\"4.1.3\"),\n.package(path: \"..\u002FFoo\"),\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{id:bm},children:[{type:b,tag:m,props:{href:"#packagetarget",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bn}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 是 Package 的基本构件，和 "},{type:b,tag:g,props:{},children:[{type:a,value:"xcodeproject"}]},{type:a,value:" 一样，Package 可以有多个 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 分为三种类型：常规型、测试类型、系统库类型。分别对应下面几个快捷创建方式："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,aC]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"\u002F\u002F\u002F The type of this target."}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:cj}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"TargetType"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cl}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aO}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:" regular\n        "},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:" test\n        "},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ag}]},{type:a,value:" system\n    "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aP}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" publicHeadersPath"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cy}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:an}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"testTarget"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cy}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:cz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:an}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:$}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:aa}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ah}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"systemLibrary"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" pkgConfig"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:" providers"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"SystemPackageProvider"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:S}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ab}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:z}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"先介绍下 "},{type:b,tag:g,props:{},children:[{type:a,value:an}]},{type:a,value:" 的几个主要的属性"}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"name：名字"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"dependencies：依赖项，注意不要和上面的 "},{type:b,tag:g,props:{},children:[{type:a,value:aT}]},{type:a,value:" 搞混了，不是一个东西，这里可以依赖上面 "},{type:b,tag:g,props:{},children:[{type:a,value:aT}]},{type:a,value:" 的东西或者依赖另一个 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:"。所以这里只需要写 Package 或者 Target 的名字字符串（"},{type:b,tag:g,props:{},children:[{type:a,value:"Target.Dependency"}]},{type:a,value:" 这个枚举也实现了 "},{type:b,tag:g,props:{},children:[{type:a,value:ch}]},{type:a,value:"）。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"path："},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 的路径，默认的话是 "},{type:b,tag:g,props:{},children:[{type:a,value:"[PackageRoot]\u002FSources\u002F[TargetName]"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"source：源文件路径，默认 "},{type:b,tag:g,props:{},children:[{type:a,value:"TargetName"}]},{type:a,value:" 文件夹下都是源代码文件，会递归搜索"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"exclude：需要被排除在外的文件 \u002F 文件夹，这些文件不会参与编译。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"publicHeadersPath：C 家族库的公共头文件地址。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"swiftSettings：定义一个用于特定环境（例如 Debug）的宏，需要设置的话可以去 "},{type:b,tag:g,props:{},children:[{type:a,value:cp}]},{type:a,value:" 上研究下"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"linkerSettings：用于链接一些系统库"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"对于常规型 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" ，可以包含 Swift 代码文件或者 C 家族的代码文件，但是不能在一个 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 中混合两种语言。和上面说过的类似，如果 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 的代码文件中含有 "},{type:b,tag:g,props:{},children:[{type:a,value:aE}]},{type:a,value:aU},{type:b,tag:g,props:{},children:[{type:a,value:"main.c"}]},{type:a,value:aU},{type:b,tag:g,props:{},children:[{type:a,value:"main.cpp"}]},{type:a,value:" 文件，这个 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 就会被编译成可执行文件，否则就会被编译成静态库或者动态库。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"系统库的 "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" 上面介绍 Package 时已经使用过了，需要注意的是 "},{type:b,tag:g,props:{},children:[{type:a,value:aF}]},{type:a,value:" 文件中的路径配置，主要是用于找寻系统库的 "},{type:b,tag:g,props:{},children:[{type:a,value:cB}]},{type:a,value:" 文件，"},{type:b,tag:g,props:{},children:[{type:a,value:cB}]},{type:a,value:" 文件里有系统库的具体配置。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aw},children:[{type:b,tag:m,props:{href:"#%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%B0%8F%E7%82%B9",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:aw}]},{type:a,value:f},{type:b,tag:E,props:{id:ax},children:[{type:b,tag:m,props:{href:"#%E9%80%9A%E8%BF%87%E9%A2%84%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%E5%8C%BA%E5%88%86%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ax}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"上文也说过，Package 可以通过 SwiftPM 执行 "},{type:b,tag:g,props:{},children:[{type:a,value:cC}]},{type:a,value:" 进行编译，也可以通过生成 "},{type:b,tag:g,props:{},children:[{type:a,value:"xcodeproj"}]},{type:a,value:" 从而通过 Xcode 进行编译，两者的编译环境并不相同，生成的可执行文件也不是同一个地址，所以可以通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"SWIFT_PACKAGE"}]},{type:a,value:" 区分编译环境"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"#if SWIFT_PACKAGE\nimport Foundation\n#endif\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{id:bo},children:[{type:b,tag:m,props:{href:"#%E9%80%89%E6%8B%A9%E7%89%B9%E5%AE%9A-swift-%E7%89%88%E6%9C%AC%E7%9A%84-package",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bp}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"SwiftPM 设计时就支持每个包工作在不同的 Swift 语言版本和 SwiftPM 版本，看了官方的 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager\u002Fblob\u002Fmaster\u002FDocumentation\u002FUsage.md#handling-version-specific-logic",rel:[K,L,M],target:N},children:[{type:a,value:cD}]},{type:a,value:" 之后，还是有点不清不楚 (我自己也没试过)，觉得下面我的理解有问题的可以自行阅览刚才的链接文档。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"先介绍下如何选择特定 Swift 语言版本的包。举个例子，工具包 "},{type:b,tag:g,props:{},children:[{type:a,value:ap}]},{type:a,value:" 在某个迭代中已经适配升级成 Swift 5.0 ，但是有些项目还是在用 Swift 3.0，所以 "},{type:b,tag:g,props:{},children:[{type:a,value:ap}]},{type:a,value:" 还得支持 Swift 3.0。对于这种包功能相同但是 Swift 语言版本号不同的情况，可以才用 tag 后缀的形式，例如 "},{type:b,tag:g,props:{},children:[{type:a,value:"[1.0.0,1.2.0@swift-3, 1.3.0]"}]},{type:a,value:"，这样一来，SwiftP··M 3.0 在查找 "},{type:b,tag:g,props:{},children:[{type:a,value:ap}]},{type:a,value:" 库的可用版本时，就会直接忽略 "},{type:b,tag:g,props:{},children:[{type:a,value:"1.0.0,1.3.0"}]},{type:a,value:"，而去直接寻找 "},{type:b,tag:g,props:{},children:[{type:a,value:"1.2.3@swift-3"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"选择特定 SwiftPM 版本的包。举个例子，我写了一个工具包，支持 Swift 3.0 和 Swift 4.0、Swift 4.2，但是 SwiftPM 在 3.0 、4.0、4.2 的 API 又不一样，这就导致被依赖的时候需要不同的 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:"，所以 SwiftPM 提供了一个这样的写法："},{type:b,tag:g,props:{},children:[{type:a,value:aW}]},{type:a,value:"。我们熟知的 "},{type:b,tag:g,props:{},children:[{type:a,value:cE}]},{type:a,value:" 就是这样写的，在 "},{type:b,tag:g,props:{},children:[{type:a,value:"Alamofire 4.8"}]},{type:a,value:" 中就提供了如下三个 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 版本："}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"Package.swift (tool-version: 4.2)"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:m,props:{href:"mailto:Package@swift-3.swift"},children:[{type:a,value:aW}]},{type:a,value:" (tool-version: 3.0)"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:m,props:{href:"mailto:Package@swift-4.swift"},children:[{type:a,value:"Package@swift-4.swift"}]},{type:a,value:" (tool-version: 4.0)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这样当 Swift 4.2 的项目依赖 "},{type:b,tag:g,props:{},children:[{type:a,value:cE}]},{type:a,value:" 时，会直接找到 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:"，当 Swift 3.0 的项目依赖它时，找到 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 发现 "},{type:b,tag:g,props:{},children:[{type:a,value:"tool-version"}]},{type:a,value:"版本不匹配，就会再去找与 Swift 3.0 兼容的 "},{type:b,tag:g,props:{},children:[{type:a,value:aW}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"无论上上面哪两种方式，都是 Swift 5.0 API 稳定之前的中间产物，以后废不废弃这些写法也不一定，苹果的文档里也说除非必要不然希望我们这样做，所以新开的 Swift 5.0 起步的项目也不需要关心这些。"}]},{type:a,value:f},{type:b,tag:E,props:{id:bq},children:[{type:b,tag:m,props:{href:"#packageresolved",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"和大多数包管理工具类似，SwiftPM 也会生成一个 "},{type:b,tag:g,props:{},children:[{type:a,value:aJ}]},{type:a,value:" 文件来记录依赖项的解析结果，当执行依赖解析的时候，会优先解析这个文件，不存在时才会解析 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:"。这一点和 Cocoapods 的 "},{type:b,tag:g,props:{},children:[{type:a,value:"podfile.lock"}]},{type:a,value:" 文件类似，有的项目进行工程管理时为了能每个成员自由的执行 Update 操作，都会在上传时把它忽略掉。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:cf}]},{type:a,value:" 命令会解析项目的依赖，如果之前有 resolve 文件，但是和本地的 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 的配置有不对应（小组成员提交了更改），该命令会更新包依赖。平常使用的 "},{type:b,tag:g,props:{},children:[{type:a,value:cC}]},{type:a,value:" 等命令中都会含有该命令。"}]},{type:a,value:f},{type:b,tag:E,props:{id:br},children:[{type:b,tag:m,props:{href:"#build-configuration",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bs}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"同大多数苹果的软件设计类似，SwiftPM 编译时也有 Debug\u002FRealease 之分，可以通过 "},{type:b,tag:g,props:{},children:[{type:a,value:"swift build -c debug\u002Frealease"}]},{type:a,value:" 进行编译，具体的区别主要是代码的编译优化和调试信息。默认不加参数时下是 debug 环境。"}]},{type:a,value:f},{type:b,tag:E,props:{id:bt},children:[{type:b,tag:m,props:{href:"#swift-package-vs-swift-module",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bu}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Swift Module 是一个代码集合体，有自己的访问控制。而 Swift Package 是 SwiftPM 中所使用的，由代码文件和 "},{type:b,tag:g,props:{},children:[{type:a,value:R}]},{type:a,value:" 构成，Swift Package 可以包含多个 Swift Module，而且并不局限于 Swift 语言（比如 C\u002FC++ 语言）。从某种意义上说 Swift Package 类似 Xcode.project，Swift Module 类似于 Xcode.target。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:bv},children:[{type:b,tag:m,props:{href:"#swift-evolution-ideas",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bw}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"下面是一些 SwiftPM 开发者们在考虑的优化项，顺序不代表优先级，目前除了支持资源文件这一项，其他的暂时还没安排到具体的代码中去。"}]},{type:a,value:f},{type:b,tag:E,props:{id:bx},children:[{type:b,tag:m,props:{href:"#mirror-and-fork-support",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:by}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Mirror：我们构建 Package 肯定希望它的依赖项都是稳定的链接，尤其是在发布的时候。所以希望如果在某项依赖由于某种原因（配置文件或者代码等等不完整或者仓库被删了、该库链接的网络访问失败等）下载失败时，可以提供一个备用的链接，这一点在务端的发布中是非常有用的。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Fork：有时候第三方库的公开版有 bug，但是并没发布修复完的版本，很多人就会 fork 一个 bugfix 版本，这时候其实很多人会直接把依赖的 git 链接改成自己的 fork 链接，这样虽然能简单的解决问题，但是对于下面这种情况就会变得复杂："}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"比如当前我在开发主包 Package A，存在一个依赖链：A --\u003E B --\u003E C --\u003E D，但是此时 D 出现了一个 bug，需要 fork 一个 bugfix 版本，如果按照上面的思路，就需要把依赖链中间的 B、C 都要 fork 一个 bugfix 版本，不然 B、C 还是下载的之前有 bug 的版本。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"所以未来可能是在 Root Package （比如上例中的 A）中以下面这种方式实现："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"let package = Package(\n    name: \"app\",\n    dependencies: [\n        \u002F\u002F App depend on the libCore dependency.\n        .package(url: \"https:\u002F\u002Fgithub.com\u002Fexample\u002FlibCore.git\", from: \"1.0.0\"),\n\n        \u002F\u002F Override the dependency with our fork until an important patch is merged upstream.\n        .fork(package: \"libCore\", url: \"https:\u002F\u002Fgithub.com\u002FmyName\u002FlibCore.git\", .branch(\"CVE-5715\")),\n    ],\n    ...\n)\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这里含义是将 Package 依赖图里所有的 "},{type:b,tag:g,props:{},children:[{type:a,value:"libCore"}]},{type:a,value:" 库换成下面的链接，不过需要需要注意的一点是这个特性只能在 Root Package 中使用，当作为 Package 发布出去被别的 Package 依赖时 SwiftPM 会直接报错，不然会因为设置多个 fork 而导致解析错误。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这两个优化点具体的讨论在 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fforums.swift.org\u002Ft\u002Fdependency-mirroring-and-forking\u002F13902",rel:[K,L,M],target:N},children:[{type:a,value:"forums"}]},{type:a,value:" 可以看到。到目前为止，应该还没有解决，在 master 的代码中也没看见对应的介绍。"}]},{type:a,value:f},{type:b,tag:E,props:{id:ay},children:[{type:b,tag:m,props:{href:"#%E6%9C%89%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:ay}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"举个例子，有些 "},{type:b,tag:g,props:{},children:[{type:a,value:_}]},{type:a,value:" 只希望在 "},{type:b,tag:g,props:{},children:[{type:a,value:"Linux"}]},{type:a,value:" 环境下被依赖，其他环境下不被依赖。这个特性已经被提到了 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fbugs.swift.org\u002Fbrowse\u002FSR-883",rel:[K,L,M],target:N},children:[{type:a,value:"这里"}]},{type:a,value:"，希望用如下的这种方式："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:".package(url: \"https:\u002F\u002F...\", from: \"1.0.0\", when: .testing),\n.package(url: \"https:\u002F\u002F...\", from: \"2.0.0\", when: .os(.linux),\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"但是 SwiftPM 的开发人员表示该特性需要再考虑下改如何实现，目前还是搁置暂议。"}]},{type:a,value:f},{type:b,tag:E,props:{id:az},children:[{type:b,tag:m,props:{href:"#%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:az}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"到目前为止集成到 Swift 语言里的 PackageDescription 里（即 Swift 5.1），还没有对应的机制又来存放资源文件，"},{type:b,tag:g,props:{},children:[{type:a,value:bY}]},{type:a,value:" 文件夹里只能读取到代码文件。关于这点，之前有人提出过这个 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fbugs.swift.org\u002Fbrowse\u002FSR-2866",rel:[K,L,M],target:N},children:[{type:a,value:"bug"}]},{type:a,value:"，这个 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fforums.swift.org\u002Ft\u002Fswift-pm-bundles-and-resources\u002F13981",rel:[K,L,M],target:N},children:[{type:a,value:"链接"}]},{type:a,value:" 里也有相应的讨论。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"这个问题公开版虽然没有解决，但是在 master 的源码中已经能看到对应的 API，不出意外的话，Swift 5.2 中就会把这个 API 集成进来。"}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002F\u002F\u002F The explicit list of resource files in the target.\n@available(_PackageDescription, introduced: 5.2)\npublic var resources: [Resource]? {\n    get { _resources }\n    set { _resources = newValue }\n    }\nprivate var _resources: [Resource]?\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{id:bz},children:[{type:b,tag:m,props:{href:"#%E5%9C%A8-package-%E7%BC%96%E8%AF%91%E6%97%B6%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%96%E8%AF%91%E8%84%9A%E6%9C%AC%E7%AD%89",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bA}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"很多时候我们想在 "},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:" 时添加很多自定义的编译脚本，例如添加一些自定义的输入和输出，SwiftPM 的开发人员提了一个未来用于解决这个提案的方式，添加 "},{type:b,tag:g,props:{},children:[{type:a,value:"PackageExtentsion"}]},{type:a,value:" ："}]},{type:a,value:f},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,P]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"extension Target {\n    static func packageExtension(\n        name: String,\n        dependencies: [Dependency] = []\n    ) -\u003E Target\n}\n\nextension Product {\n    static func packageExtension(\n        name: String\n    ) -\u003E Product\n}\n"}]}]}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"具体的实现方式还需要很多步骤，感兴趣的可以看下这个 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fforums.swift.org\u002Ft\u002Fpackage-manager-extensible-build-tools\u002F10900",rel:[K,L,M],target:N},children:[{type:a,value:"提案"}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:E,props:{id:aA},children:[{type:b,tag:m,props:{href:"#%E5%85%B6%E4%BB%96%E5%BE%85%E4%BC%98%E5%8C%96%E9%A1%B9",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:aA}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"支持创建包时可以加入自定义模板 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fbugs.swift.org\u002Fbrowse\u002FSR-7837",rel:[K,L,M],target:N},children:[{type:a,value:"SR-7837"}]},{type:a,value:" 。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"一句命令行直接打 tag 并发布到 git 源上。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"性能测试："},{type:b,tag:m,props:{href:"https:\u002F\u002Fbugs.swift.org\u002Fbrowse\u002FSR-1354",rel:[K,L,M],target:N},children:[{type:a,value:"SR-1354"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"一个 git 源上放多个 Package："},{type:b,tag:m,props:{href:"https:\u002F\u002Fbugs.swift.org\u002Fbrowse\u002FSR-3951",rel:[K,L,M],target:N},children:[{type:a,value:"SR-3951"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager\u002Fblob\u002Fmaster\u002FDocumentation\u002FEvolutionIdeas.md",rel:[K,L,M],target:N},children:[{type:a,value:"等等"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ad,props:{id:bB},children:[{type:b,tag:m,props:{href:"#swiftpm-%E5%9C%A8-ios-%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%BD%BF%E7%94%A8",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bC}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"其实说 SPM 支持 iOS 等平台，个人觉得是有点问题的，因为这里只是 Xcode11 集成了 "},{type:b,tag:g,props:{},children:[{type:a,value:bO}]},{type:a,value:"，适配了 SPM 系统，从 SPM 本身的设计来看，并不能严格的说支持 iOS 等平台。而根据 github 上面的 "},{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager\u002Fblob\u002Fmaster\u002FDocumentation\u002FlibSwiftPM.md",rel:[K,L,M],target:N},children:[{type:a,value:cD}]},{type:a,value:" 显示，这个库最近还是会经常变动的。"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"对于 SwiftPM 在 iOS 平台的使用，并不是像 MacOS 平台这样通过配置文件实现，而是通过 Xcode 的官方插件进行集成。自己试了下，流程还是有点慢。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:bD},children:[{type:b,tag:m,props:{href:"#swiftpm-%E5%AF%B9%E6%AF%94-cocoapods-%E5%92%8C-carthage",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bE}]},{type:a,value:f},{type:b,tag:E,props:{id:bF},children:[{type:b,tag:m,props:{href:"#cocoapod",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bG}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"最古老的的一种包管理工具，也是使用最广泛的工具，依赖放在各个源（master 或者 自己的源）上的 "},{type:b,tag:g,props:{},children:[{type:a,value:"podspec"}]},{type:a,value:" 文件进行下载代码库，在本地生成一个 workspace 进行统一管理、添加依赖。"}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"自动化 \u002F 侵入性高：一键配置和集成依赖 \u002F 自动更改 Xcode.project 的配置"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"中心化：提供各个源管理仓库配置文件，所有更新仓库文件索引可能会很慢。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"缓存：除了项目根目录的缓存之外，还有较完整的本地缓存体系，所以不同工程下载同一个库时会直接从本地拿。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"生态环境：比较完善，大多数库都提供了 pod 的集成方式，各种文档和工具也比较多"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{id:bH},children:[{type:b,tag:m,props:{href:"#carthage",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bI}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cF}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"成本略高 \u002F 侵入性低：Carthage 只会帮你把各个库下载到本地（默认会编译成静态库），具体的 Project 配置需要自己弄"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"生态环境：很差，很多库都没有提供这种依赖方式"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:cG}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{id:bJ},children:[{type:b,tag:m,props:{href:"#swiftpm",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:bK}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:cF}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"自动化 \u002F 侵入性高：默认情况下需要有一定的目录格式"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"生态环境：怎么说呢，不能说差，只能说不够成熟，还有很多待优化项，毕竟是"},{type:b,tag:al,props:{},children:[{type:a,value:"官方开发，Xcode 自集成"}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:cG}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"上面是这三个东西在 Swift 包管理上的对比，至于如何选择，个人觉得如果所有的库都支持这些管理方式，那当然是选有官方认证的 SwiftPM，而且它也是使用 Swift 语言编写的，对于看设计原理也比较方便点。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aB},children:[{type:b,tag:m,props:{href:"#%E5%BC%95%E7%94%A8",ariaHidden:r,tabIndex:s},children:[{type:b,tag:c,props:{className:[t,u]},children:[]}]},{type:a,value:aB}]},{type:a,value:f},{type:b,tag:Y,props:{},children:[{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F39499281\u002Fwhat-is-the-difference-between-a-swift-package-and-a-module",rel:[K,L,M],target:N},children:[{type:a,value:"What is the difference between a Swift package and a module?"}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fgithub.com\u002Fapple\u002Fswift-package-manager",rel:[K,L,M],target:N},children:[{type:a,value:"swift-package-manager"}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:m,props:{href:"https:\u002F\u002Fmedium.com\u002F@ntrupin\u002Fpods-carthage-and-spm-swifts-package-management-dilemma-7da4ec87a20c",rel:[K,L,M],target:N},children:[{type:a,value:"Pods, Carthage, and SPM: Swift’s Package Management Dilemma"}]}]},{type:a,value:f}]}]},dir:"\u002Fwiki\u002FiOS\u002F包管理工具",path:cH,extension:".md",createdAt:cI,updatedAt:cI},prev:{slug:"0-搞懂git",date:"2020-11-13T03:14:51.000Z",title:"一文搞懂git"},next:{slug:"待学习-rumtime源码解读",date:"2020-11-18T08:42:16.000Z",title:"rumtime源码解读"},scrollTop:cJ,sideCategory:[{folderName:"iOS",articles:[{slug:"iOS-Swift-ObjectMapper 指南",title:"Swift-ObjectMapper 指南",date:"2016-05-23 16:13",path:"\u002Fwiki\u002FiOS\u002FiOS-Swift-ObjectMapper 指南"},{slug:"iOS-URL Schemes && Universal Links 简单使用",title:"URL Schemes && Universal Links 简单使用",date:"2017-02-14T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-URL Schemes && Universal Links 简单使用"},{slug:"iOS-YYModel",title:"YYModel几种使用场景",date:cK,path:"\u002Fwiki\u002FiOS\u002FiOS-YYModel"},{slug:"iOS-ios-useful-link",title:"'实用链接",date:"2017-07-14T16:58:04.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-ios-useful-link"},{slug:"iOS-mrpeak杂货铺-iOS应用层架构之CDD",title:"(转)mrpeak杂货铺-iOS应用层架构之CDD",date:cL,path:"\u002Fwiki\u002FiOS\u002FiOS-mrpeak杂货铺-iOS应用层架构之CDD"},{slug:"iOS-检测离屏渲染与绘制高性能圆角",title:"(待)检测离屏渲染与绘制高性能圆角",date:"2017-08-17T10:03:56.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-检测离屏渲染与绘制高性能圆角"},{slug:"iOS-深度重构UIViewController",title:"(转)mrpeak杂货铺-深度重构UIViewController",date:"2017-11-19T21:33:42.000Z",path:"\u002Fwiki\u002FiOS\u002FiOS-深度重构UIViewController"},{slug:"iOS-添加字体库",title:"使用第三方字体",date:cL,path:"\u002Fwiki\u002FiOS\u002FiOS-添加字体库"}],children:[{folderName:"3part",articles:[{slug:"3part-umeng-install",title:"快速集成友盟分享",date:"2018-03-01 16:11",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-umeng-install"},{slug:"3part-快速集成微信支付",title:"快速集成微信\u002F支付宝\u002F银联",date:"2017-11-17T16:19:25.000Z",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-快速集成微信支付"},{slug:"3part-快速集成百度地图",title:"集成百度地图、百度导航",date:"2017-08-11T11:24:43.000Z",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-快速集成百度地图"},{slug:"3part-阿里云视频点播集成",date:"2020-10-26T01:10:15.000Z",title:"阿里云视频点播VOD",path:"\u002Fwiki\u002FiOS\u002F3part\u002F3part-阿里云视频点播集成"}],children:[]},{folderName:"Autolayout",articles:[{slug:"Autolayout-baseline",title:"label底部对齐、顶部对齐",date:cM,path:"\u002Fwiki\u002FiOS\u002FAutolayout\u002FAutolayout-baseline"}],children:[]},{folderName:"Error",articles:[{slug:"Error-2017-07-31",title:"Undefined symbols for architecture ..",date:"2017-07-31T08:52:40.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-2017-07-31"},{slug:"Error-Shell-Script-Invocation-Error",title:"'Shell Script Invocation Error'",date:"2017-07-20T14:27:04.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-Shell-Script-Invocation-Error"},{slug:"Error-gesture",title:"tableViewCell的点击和tapGestureRecognizer冲突的处理",date:"2016-11-19T21:33:42.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-gesture"},{slug:"Error-崩溃分析",date:"2020-11-11T07:28:34.000Z",title:"崩溃分析(转载)",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-崩溃分析"},{slug:"Error-竖屏下视频全屏播放",title:"(转)竖屏下视频全屏播放",date:"2017-08-01T15:23:01.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-竖屏下视频全屏播放"},{slug:"Error-证书过期或者移除对app的影响",title:"证书过期或者移除对app的影响",date:"2018-01-11T13:49:33.000Z",path:"\u002Fwiki\u002FiOS\u002FError\u002FError-证书过期或者移除对app的影响"}],children:[]},{folderName:"Objective-C",articles:[{slug:"Objective-C-KVO - Observe property of an object contained in a NSArray",title:"KVO - Observe property of an object contained in a NSArray",date:"2017-09-28 22:26",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-KVO - Observe property of an object contained in a NSArray"},{slug:"Objective-C-NSArrayFilter",title:"NSArray: filteredArrayUsingPredicate",date:"2017-09-14 16:24",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSArrayFilter"},{slug:"Objective-C-NSRecursiveLock",date:"2020-10-27T00:52:16.000Z",title:"NSRecursiveLock",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSRecursiveLock"},{slug:"Objective-C-NSStringCompareOptions",title:"NSStringCompareOptions",date:"2017-07-10T17:13:25.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-NSStringCompareOptions"},{slug:"Objective-C-containsObject-or-removeObject",title:"containsObject or removeObject",date:"2015年04月12日09:55:35",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-containsObject-or-removeObject"},{slug:"Objective-C-get-lunarholidays",title:"节气、节假日计算",date:"2017-07-13T09:30:26.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-get-lunarholidays"},{slug:"Objective-C-use-dispatch_queue_t-with-strong",title:"dispatch_queue_t 用strong来修饰",date:cK,path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-use-dispatch_queue_t-with-strong"},{slug:"Objective-C-农历",title:"农历",date:"2017-07-11T13:12:46.000Z",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-农历"},{slug:"Objective-C-常用的宏",title:"常用的宏",date:"2015-03-04 11:11",path:"\u002Fwiki\u002FiOS\u002FObjective-C\u002FObjective-C-常用的宏"}],children:[]},{folderName:"StatusBar",articles:[{slug:"StatusBar-how-to-detect-touches-in-status-bar",title:"获取StatusBar的点击事件",date:cN,path:"\u002Fwiki\u002FiOS\u002FStatusBar\u002FStatusBar-how-to-detect-touches-in-status-bar"},{slug:"StatusBar-ios-status-bar-style",title:"修改StatusBarStyle以及statusBar的背景颜色",date:cN,path:"\u002Fwiki\u002FiOS\u002FStatusBar\u002FStatusBar-ios-status-bar-style"}],children:[]},{folderName:"UIKit",articles:[{slug:"UIKit-UIAlertController修改文字对齐方式",date:"2020-10-23T08:07:07.000Z",title:"UIAlertController修改文字对齐方式",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UIAlertController修改文字对齐方式"},{slug:"UIKit-UIDynamic Animator",title:"UIDynamic Animator",date:"2016-07-20T16:13:11.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UIDynamic Animator"},{slug:"UIKit-UISplit​View​Controller 学习笔记",title:"UISplit​View​Controller 学习笔记",date:"2017-04-07T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-UISplit​View​Controller 学习笔记"},{slug:"UIKit-searchBar-style",title:"如何修改searchBar的样式",date:"2017-05-14T19:01:01.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-searchBar-style"},{slug:"UIKit-uioffset",title:"UIOffset",date:"2017-08-02T15:30:01.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-uioffset"},{slug:"UIKit-屏幕旋转.md",date:"2020-11-09T06:04:42.000Z",title:"屏幕旋转",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-屏幕旋转.md"},{slug:"UIKit-离屏渲染",title:"(转)关于iOS离屏渲染的深入研究",date:"2020-04-06T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-离屏渲染"},{slug:"UIKit-给WebView添加个粗糙的加载动画",title:"给UIWebView添加个粗糙的加载动画",date:"2017-02-10T00:00:00.000Z",path:"\u002Fwiki\u002FiOS\u002FUIKit\u002FUIKit-给WebView添加个粗糙的加载动画"}],children:[]},{folderName:"UITextFeild",articles:[{slug:"UITextFeild-2018-01-16",title:"修改光标颜色和clear button的颜色",date:"2018-01-16T15:44:44.000Z",path:"\u002Fwiki\u002FiOS\u002FUITextFeild\u002FUITextFeild-2018-01-16"},{slug:"UITextFeild-uitextfeild-select-all",title:"默认选中文本",date:"2017-07-07 04:44",path:"\u002Fwiki\u002FiOS\u002FUITextFeild\u002FUITextFeild-uitextfeild-select-all"}],children:[]},{folderName:"keyboard",articles:[{slug:"keyboard-disable-3rd-keyboard",title:"禁用第三方键盘",date:cM,path:"\u002Fwiki\u002FiOS\u002Fkeyboard\u002Fkeyboard-disable-3rd-keyboard"}],children:[]},{folderName:"loc",articles:[{slug:"loc-2018-01-22",title:"CLPlacemark中文",date:"2018-01-22T14:36:49.000Z",path:"\u002Fwiki\u002FiOS\u002Floc\u002Floc-2018-01-22"},{slug:"loc-sim-locaiton-ios",title:"真机或模拟器修改定位位置",date:"2017-08-11T10:29:01.000Z",path:"\u002Fwiki\u002FiOS\u002Floc\u002Floc-sim-locaiton-ios"}],children:[]},{folderName:"tableView",articles:[{slug:"tableView-cell-seprateLine",title:"cell分割线的颜色",date:"2017-08-08T15:26:14.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-cell-seprateLine"},{slug:"tableView-compare-NSIndexPath",title:"compare NSIndexPath",date:"2017-08-15T17:01:49.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-compare-NSIndexPath"},{slug:"tableView-tabeleView 获取某个cell的高度",title:"tabeleView 获取某个cell的高度",date:"2017-05-09T10:36:29.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-tabeleView 获取某个cell的高度"},{slug:"tableView-taleview-headerfooterView-xib",title:"xib UITableViewHeaderFooterView",date:"2017-08-18T09:47:36.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-taleview-headerfooterView-xib"},{slug:"tableView-结合layoutMargins做tableViewCell的适配",title:"结合layoutMargins做cell的适配",date:"2017-08-20T21:55:52.000Z",path:"\u002Fwiki\u002FiOS\u002FtableView\u002FtableView-结合layoutMargins做tableViewCell的适配"}],children:[]},{folderName:"xib",articles:[{slug:"xib-如何替换已有的控件",title:"如何替换已有的控件",date:"2017-09-07T10:51:38.000Z",path:"\u002Fwiki\u002FiOS\u002Fxib\u002Fxib-如何替换已有的控件"}],children:[]},{folderName:"代码片段",articles:[{slug:"代码片段-分割小说章节",title:"分割小说章节",date:"2017-01-18T15:12:12.000Z",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-分割小说章节"},{slug:"代码片段-截图 截长图 高清图",title:"截图 截长图 高清图",date:"2016-05-04 22:38",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-截图 截长图 高清图"},{slug:"代码片段-读取未知类型的txt文件",title:"读取未知类型的txt文件 ",date:"2017-01-16 20:12",path:"\u002Fwiki\u002FiOS\u002F代码片段\u002F代码片段-读取未知类型的txt文件"}],children:[]},{folderName:"包管理工具",articles:[{slug:"包管理工具-spm-resource-handle",date:"2020-11-19T00:58:59.000Z",title:"SWift Package Manager资源文件管理",path:"\u002Fwiki\u002FiOS\u002F包管理工具\u002F包管理工具-spm-resource-handle"},{slug:aX,date:aY,title:aZ,path:cH}],children:[]},{folderName:"日历",articles:[{slug:"日历-FSCalendar",title:"FSCalendar",date:"2017-07-11T08:48:12.000Z",path:"\u002Fwiki\u002FiOS\u002F日历\u002F日历-FSCalendar"}],children:[]},{folderName:"适配",articles:[{slug:"适配-NFC初试",title:"NFC初试",date:"2017-06-07 18:31",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-NFC初试"},{slug:"适配-iOS11 Xcode9新功能新特性",title:"iOS11 Xcode9新功能新特性",date:cO,path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11 Xcode9新功能新特性"},{slug:"适配-iOS11 tableView适配不完全指南",title:"iOS11 tableView适配不完全指南",date:"2017-09-19 12:33",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11 tableView适配不完全指南"},{slug:"适配-iOS11刘海屏EdgeProtect相关",date:"2020-10-26T06:00:25.000Z",title:"iOS11刘海屏EdgeProtect相关",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11刘海屏EdgeProtect相关"},{slug:"适配-iOS11适配参考",title:"iOS11 适配参考",date:cO,path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS11适配参考"},{slug:"适配-iOS14hidesBottomBarWhenPushed兼容问题",date:"2020-10-23T08:53:49.000Z",title:"iOS14 hidesBottomBarWhenPushed兼容问题",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-iOS14hidesBottomBarWhenPushed兼容问题"},{slug:"适配-touch-id",title:"touch Id",date:"2017-08-04T13:46:10.000Z",path:"\u002Fwiki\u002FiOS\u002F适配\u002F适配-touch-id"}],children:[]},{folderName:"问与答",articles:[{slug:"问与答-为什么ui操作要在主线程",date:"2020-11-16T03:38:48.000Z",title:"为什么ui操作要在主线程",path:"\u002Fwiki\u002FiOS\u002F问与答\u002F问与答-为什么ui操作要在主线程"}],children:[]}]}]}],fetch:{},mutations:cJ}}("text","element","span","token","punctuation","\n","code"," ","p","builtin",":","operator","a",".",",","li","keyword","true",-1,"icon","icon-link","[","]","PackageDescription","comment","=","function","(",")",3,"h3","div","nuxt-content-highlight","pre","line-numbers","string","nofollow","noopener","noreferrer","_blank","\n    ","language-text","String","Package.swift","?","constant","nil","\n        ","target","Package","ul","name","Dependency","public","static","\u003E",2,"h2","。","Requirement","case","func","-","\n\n","\"Paper\"","strong","Version","Target"," targets","Foo","\n  ","\n\n    ","概念","创建一个可执行的包","添加依赖","添加系统依赖包","需要注意的小点","通过预处理命令区分编译环境","有条件的添加依赖","添加资源文件","其他待优化项","引用","language-swift","library","main.swift","module.modulemap","Swift build","h4"," dependencies","Package.resolved","\"Dealer\""," 和 ","、","\"tool\"","{","}","number","_","upToNextMajor","Package.Dependency","，"," path","Package@swift-3.swift","包管理工具-spm-introduce","2020-11-18T08:08:33.000Z","Swift Package Manager介绍","swiftpm-是什么","SwiftPM 是什么","swiftpm-的创建和使用","SwiftPM 的创建和使用","采用-xcode-运行","采用 Xcode 运行","解析-package","解析 Package","packagesupportedplatform","Package.SupportedPlatform","packageproduct","Package.Product","packagedependencies","Package.Dependencies","packagetarget","Package.Target","选择特定-swift-版本的-package","选择特定 Swift 版本的 Package","packageresolved","build-configuration","Build Configuration","swift-package-vs-swift-module","Swift Package VS Swift Module","swift-evolution-ideas","Swift Evolution Ideas","mirror-and-fork-support","Mirror and Fork Support","在-package-编译时添加自定义编译脚本等","在 Package 编译时添加自定义编译脚本等","swiftpm-在-ios-平台的使用","SwiftPM 在 iOS 平台的使用","swiftpm-对比-cocoapods-和-carthage","SwiftPM 对比 Cocoapods 和 Carthage","cocoapod","Cocoapod","carthage","Carthage","swiftpm","SwiftPM","blockquote","https:\u002F\u002Fjuejin.im\u002Fpost\u002F6844904019815579661","https:\u002F\u002Fswift.org\u002Fpackage-manager\u002F","libSwiftPM","import","let"," package ","\n    name","\n    products","executable","\n    dependencies","\n    targets","在 ","Source","\u002Fusr\u002Flocal\u002Flib\u002Fpkgconfig\u002F","创建一个可执行的包作为主包","创建系统依赖文件并编辑","cairo.h","添加系统依赖进可执行包里","编辑 "," type","Package.dependencies","swift package resolve","对于 ","ExpressibleByStringLiteral","\u003C","enum","extension","Encodable","\u002F\u002F\u002F Creates a specified for a range starting at the given lower bound","from version","upToNextMinor","API","Requirement."," exclude"," sources"," cSettings","CSetting"," cxxSettings","CXXSetting"," swiftSettings","SwiftSetting"," linkerSettings","LinkerSetting",".pc","swift build","文档","Alamofire","去中心化：没有统一管理的中心，所以没有更新中心服务器的文件索引这种耗时步骤","缓存：只有项目根目录的缓存，所以不同项目对于同一个库需要重新下载","\u002Fwiki\u002FiOS\u002F包管理工具\u002F包管理工具-spm-introduce","2021-09-16T14:01:03.577Z",void 0,"2017-08-31T09:32:08.000Z","2017-10-27T18:01:13.000Z","2017-08-19T16:10:51.000Z","2016-07-01T14:19:23.000Z","2017-09-20T15:20:33.000Z")));