__NUXT_JSONP__("/wiki/content/Spring-SpringMVC%E4%B8%AD%E7%9A%84ModelModelMapModelAndView", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao){return {data:[{},{article:{slug:P,draft:false,date:Q,title:R,toc:[{id:S,depth:C,text:T},{id:U,depth:C,text:V},{id:W,depth:C,text:X},{id:Y,depth:C,text:Z}],body:{type:"root",children:[{type:b,tag:D,props:{id:S},children:[{type:b,tag:E,props:{ariaHidden:F,href:"#1model",tabIndex:G},children:[{type:b,tag:c,props:{className:[H,I]},children:[]}]},{type:a,value:T}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"Model 是一个接口， 其实现类为 ExtendedModelMap，继承了 ModelMap 类。"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"ExtendedModelMap"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"implements"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"Model"}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:D,props:{id:U},children:[{type:b,tag:E,props:{ariaHidden:F,href:"#2modelmap",tabIndex:G},children:[{type:b,tag:c,props:{className:[H,I]},children:[]}]},{type:a,value:V}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"ModelMap 的声明格式:"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"LinkedHashMap"}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"ModelMap 对象主要用于传递控制方法处理数据到结果页面，也就是说我们把结果页面上需要的数据放到 ModelMap 对象中即可，他的作用类似于 request 对象的 setAttribute 方法的作用: 用来在一个请求过程中传递处理的数据。ModelMap 或者 Model 通过 addAttribute 方法向页面传递参数, 其中 addAttribute 方法参数有多种方式："}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"Collection"}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]}]},{type:a,value:" attributeValues"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"Map"}]},{type:b,tag:c,props:{className:[d,L]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]}]},{type:a,value:" attributes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"在页面上可以通过 el 表达式语言 $attributeName 等系列数据展示标签获取并展示 modelmap 中的数据。 "},{type:b,tag:K,props:{},children:[]},{type:a,value:"\nmodelmap 本身不能设置页面跳转的 url 地址别名或者物理跳转地址，那么我们可以通过控制器方法的字符串返回值来设置跳转 url 地址别名或者物理跳转地址。"}]},{type:a,value:h},{type:b,tag:D,props:{id:W},children:[{type:b,tag:E,props:{ariaHidden:F,href:"#3modelandview",tabIndex:G},children:[{type:b,tag:c,props:{className:[H,I]},children:[]}]},{type:a,value:X}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"ModelAndView 对象有两个作用： "},{type:b,tag:K,props:{},children:[]},{type:a,value:"\n(1). 设置转向地址, 这也是 ModelAndView 和 ModelMap 的主要区别. 设置方式如下所示:"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:" view "},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"="}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"new"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,"string"]},children:[{type:a,value:"\"path:ok\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:";"}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"或者通过 setViewName 方式:"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"void"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"setViewName"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:" viewName"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"(2). 将控制器方法中处理的结果数据传递到结果页面，也就是把在结果页面上需要的数据放到 ModelAndView 对象中即可，其作用类似于 request 对象的 setAttribute 方法的作用，用来在一个请求过程中传递处理的数据。通过以下方法向页面传递参数："}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"在页面上也是可以通过 el 表达式语言 $attributeName 等系列数据展示标签获取并展示 ModelAndView 中的数据。"}]},{type:a,value:h},{type:b,tag:D,props:{id:Y},children:[{type:b,tag:E,props:{ariaHidden:F,href:"#4%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F%E5%A6%82%E4%B8%8B",tabIndex:G},children:[{type:b,tag:c,props:{className:[H,I]},children:[]}]},{type:a,value:Z}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"(1) ModelMap "},{type:b,tag:K,props:{},children:[]},{type:a,value:"\nModelMap 的实例是 spirng mvc 框架自动创建并作为控制器方法参数传入，用户无需自己创建。"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:x}]},{type:a,value:" model"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,ai]},children:[{type:a,value:"\u002F\u002F省略方法处理逻辑若干     \u002F\u002F将数据放置到ModelMap对象model中,第二个参数可以是任何java类型      model.addAttribute(\"key\",someparam);         ......     \u002F\u002F返回跳转地址      return \"path:handleok\";}"}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:l,props:{},children:[{type:a,value:"(2) ModelAndView "},{type:b,tag:K,props:{},children:[]},{type:a,value:"\nModelAndView 的实例是由用户手动创建的，这也是和 ModelMap 的一个区别。"}]},{type:a,value:h},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,u]},children:[{type:b,tag:v,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:w}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,ai]},children:[{type:a,value:"\u002F\u002F省略方法处理逻辑若干      \u002F\u002F构建ModelAndView实例，并设置跳转地址      ModelAndView view = new ModelAndView(\"path:handleok\");      \u002F\u002F将数据放置到ModelAndView对象view中,第二个参数可以是任何java类型      view.addObject(\"key\",someparam);    ......     \u002F\u002F返回ModelAndView对象view      return view;}"}]},{type:a,value:h}]}]}]}]},dir:"\u002Fwiki\u002FJava\u002FSpring",path:aj,extension:".md",createdAt:ak,updatedAt:ak},prev:{slug:"Linux命令-passwd",date:"2020-10-26T08:44:41.000Z",title:"Passwd"},next:{slug:"0-搞懂git",date:"2020-11-13T03:14:51.000Z",title:"一文搞懂git"},scrollTop:al,sideCategory:[{folderName:am,articles:[{slug:"Java-java-8-install-on-centos",title:"阿里云centos上安装jdk1.8（yum）",date:"2019-09-16T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FJava-java-8-install-on-centos"},{slug:"Java-java-mvn-proxy",title:"mvn走代理的方法",date:"2019-06-08T18:54:39.000Z",path:"\u002Fwiki\u002FJava\u002FJava-java-mvn-proxy"},{slug:"Java-java-plan",title:"JAVA学习路线",date:"2019-05-17T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FJava-java-plan"}],children:[{folderName:"3part",articles:[{slug:"3part-kafka-basic",title:"kafka基本概念理解",date:"2019-05-28T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002F3part\u002F3part-kafka-basic"},{slug:"3part-类库reflections的使用",title:"类库reflections的使用",date:an,path:"\u002Fwiki\u002FJava\u002F3part\u002F3part-类库reflections的使用"}],children:[]},{folderName:am,articles:[{slug:"Java-Collection及其衍生",date:"2020-10-23T06:09:35.000Z",title:"Collection及其衍生",path:"\u002Fwiki\u002FJava\u002FJava\u002FJava-Collection及其衍生"}],children:[]},{folderName:"Mybatis",articles:[{slug:"Mybatis-mybatis-dyna-sql",title:"mybatis中#和$的简单理解",date:"2019-07-02T10:08:02.000Z",path:"\u002Fwiki\u002FJava\u002FMybatis\u002FMybatis-mybatis-dyna-sql"},{slug:"Mybatis-mybatis-foreach",title:"mybatis中foreach以及注意事项",date:"2019-07-02T09:59:01.000Z",path:"\u002Fwiki\u002FJava\u002FMybatis\u002FMybatis-mybatis-foreach"},{slug:"Mybatis-mybatis-resultmap",title:"mybatis一对多、一对一",date:ao,path:"\u002Fwiki\u002FJava\u002FMybatis\u002FMybatis-mybatis-resultmap"}],children:[]},{folderName:"Redis",articles:[{slug:"Redis-redis-jedis",title:"2.Redis客户端：Jedis",date:"2019-06-05T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FRedis\u002FRedis-redis-jedis"},{slug:"Redis-redis-sping-cache",title:"3.Spring中的缓存抽象及SpringDataRedis使用",date:"2019-06-06T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FRedis\u002FRedis-redis-sping-cache"},{slug:"Redis-redis-basic",title:"1.Redis基本理解及使用",date:"2019-06-04T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FRedis\u002FRedis-redis-basic"}],children:[]},{folderName:"Spring",articles:[{slug:P,date:Q,title:R,path:aj},{slug:"Spring-java-requestmap",title:"Java @RequestMapping、@GetMapping、@PostMapping",date:"2019-07-04T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-java-requestmap"},{slug:"Spring-java-static-autowired",title:"Spring @Autowired注解在utils静态工具类非controller普通类中使用(转）",date:"2020-01-02T16:47:10.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-java-static-autowired"},{slug:"Spring-springboot-jsonconvert",title:"springboot之Json转换类型嵌套问题",date:"2019-06-17T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-springboot-jsonconvert"},{slug:"Spring-springboot-kaptcha",title:"springboot之kaptcha验证码",date:"2019-05-22T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-springboot-kaptcha"},{slug:"Spring-springboot-schedule",title:"spring框中简单的任务调度",date:"2019-09-25T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-springboot-schedule"},{slug:"Spring-spring-validation",title:"spring之表单验证",date:"2019-06-14T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002FSpring\u002FSpring-spring-validation"}],children:[]},{folderName:"idea",articles:[{slug:"idea-2019-01-28",title:"(JB)idea添加项目依赖、以及打包问题",date:"2019-01-28T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002Fidea\u002Fidea-2019-01-28"},{slug:"idea-error-javacTask-x",title:"[idea] 编译报错 javacTask:源发行版 8 需要目标发行版 1.8",date:an,path:"\u002Fwiki\u002FJava\u002Fidea\u002Fidea-error-javacTask-x"},{slug:"idea-idea-j-warnning",title:"intelliJ IDEA:JAVA文件名黄色J警告问题",date:"2019-05-27T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002Fidea\u002Fidea-idea-j-warnning"},{slug:"idea-idea-svn",title:"(JB)IDEA导入svn项目二三谈",date:ao,path:"\u002Fwiki\u002FJava\u002Fidea\u002Fidea-idea-svn"},{slug:"idea-springboot-start",title:"intelliJ idea:springboot项目初始化",date:"2018-10-26 13:56",path:"\u002Fwiki\u002FJava\u002Fidea\u002Fidea-springboot-start"}],children:[]},{folderName:"代码段",articles:[{slug:"代码段-java-8-rsa",title:"rsa加密解密",date:"2019-09-10T00:00:00.000Z",path:"\u002Fwiki\u002FJava\u002F代码段\u002F代码段-java-8-rsa"},{slug:"代码段-springboot-download-config",title:"(spring boot)虚拟目录配置、文件下载",date:"2019-01-29T17:23:27.000Z",path:"\u002Fwiki\u002FJava\u002F代码段\u002F代码段-springboot-download-config"}],children:[]},{folderName:"微服务",articles:[{slug:"微服务-feign-pass-http-header",title:"feign请求头丢失",date:"2019-01-28T16:24:12.000Z",path:"\u002Fwiki\u002FJava\u002F微服务\u002F微服务-feign-pass-http-header"}],children:[]}]}]}],fetch:{},mutations:al}}("text","element","span","token","punctuation"," ","class-name","\n",".","keyword","public","p","(",")","function","{","div","nuxt-content-highlight","pre","language-java","line-numbers","code","String","ModelMap","}",",","Object","ModelAndView",2,"h2","a","true",-1,"icon","icon-link"," attributeValue","br","generics","\u003C","\u003E","operator","Spring-SpringMVC中的ModelModelMapModelAndView","2020-10-26T08:54:36.000Z","SpringMVC中的Model、ModelMap、ModelAndView(转载)","1model","1.Model","2modelmap","2.ModelMap","3modelandview","3.ModelAndView","4使用方式如下","4.使用方式如下:","class","extends","addAttribute"," attributeName","addAllAttributes","?","addObject","xxxxmethod"," someparam","     ","comment","\u002Fwiki\u002FJava\u002FSpring\u002FSpring-SpringMVC中的ModelModelMapModelAndView","2021-08-23T10:08:02.319Z",void 0,"Java","2019-03-15T09:36:52.000Z","2018-11-06T14:47:57.000Z")));