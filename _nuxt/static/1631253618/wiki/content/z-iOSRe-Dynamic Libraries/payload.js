__NUXT_JSONP__("/wiki/content/z-iOSRe-Dynamic%20Libraries", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE){return {data:[{},{article:{slug:Q,title:R,layout:"page",date:S,toc:[{id:T,depth:t,text:U},{id:V,depth:t,text:W},{id:X,depth:t,text:Y},{id:Z,depth:t,text:_},{id:$,depth:t,text:aa},{id:ab,depth:u,text:ac},{id:ad,depth:u,text:ae},{id:af,depth:u,text:ag},{id:ah,depth:u,text:ai},{id:aj,depth:u,text:ak},{id:al,depth:u,text:am},{id:an,depth:u,text:ao},{id:ap,depth:t,text:aq},{id:D,depth:t,text:D}],body:{type:"root",children:[{type:b,tag:f,props:{},children:[{type:b,tag:g,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fcontent\u002Fdocumentation\u002FDeveloperTools\u002FConceptual\u002FDynamicLibraries\u002F100-Articles\u002FOverviewOfDynamicLibraries.html",rel:[K,L,M],target:N},children:[{type:a,value:"官方说明"}]}]},{type:a,value:d},{type:b,tag:v,props:{id:T},children:[{type:b,tag:g,props:{href:"#linking-libraries",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:U}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"链接库的行为是代码依赖管理的一种形式。\n当任何应用程序运行时，其可执行代码被加载到内存中。\n此外，它所依赖的任何代码库也会加载到内存中。\n有两种类型的链接：静态和动态。"}]},{type:a,value:d},{type:b,tag:v,props:{id:V},children:[{type:b,tag:g,props:{href:"#dynamic-linking",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:W}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"动态链接最常用于OS X和iOS。\n当动态库链接时，库中的代码都不会直接包含在链接的目标中。\n相反，在符号得到解决之前，库会在运行时加载到内存中。\n由于代码没有静态链接到可执行二进制文件中，因此在运行时加载有一些好处。\n主要的是，这些库可以使用新功能或错误修复进行更新，而无需重新编译和重新链接可执行文件。\n此外，在运行时加载意味着各个代码库可以拥有自己的初始化程序，并在从内存中卸载之前清理自己的任务。"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"For more information on overview and design, see "},{type:b,tag:g,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Fmac\u002Fdocumentation\u002FDeveloperTools\u002FConceptual\u002FDynamicLibraries\u002F100-Articles\u002FOverviewOfDynamicLibraries.html",rel:[K,L,M],target:N},children:[{type:a,value:"Apple's Dynamic Library Programming Topics"}]},{type:a,value:"."}]},{type:a,value:d},{type:b,tag:v,props:{id:X},children:[{type:b,tag:g,props:{href:"#libraries",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:Y}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"动态库是一种Mach-O binary1，在应用程序的启动或运行时加载。\n由于动态库中的可执行代码并未静态链接到目标可执行文件中，因此在需要重复使用相同代码时，这会减少内存消耗。"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"由于动态库在运行时被加载，所以库负责告诉链接器需要哪些附加代码。\n这消除了管理你使用的所有代码需要操作的负担。"}]},{type:a,value:d},{type:b,tag:v,props:{id:Z},children:[{type:b,tag:g,props:{href:"#frameworks",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:_}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:"Dynamic frameworks"}]},{type:a,value:"和"},{type:b,tag:l,props:{},children:[{type:a,value:" dynamic libraries"}]},{type:a,value:"类似。\n两者都是动态链接库，除了"},{type:b,tag:l,props:{},children:[{type:a,value:"dynamic framework"}]},{type:a,value:"是嵌入在一个"},{type:b,tag:l,props:{},children:[{type:a,value:"bundle"}]},{type:a,value:"中的动态库。\n这允许对动态库进行版本控制以及对libraries代码使用的其他资源进行排序。"}]},{type:a,value:d},{type:b,tag:v,props:{id:$},children:[{type:b,tag:g,props:{href:"#example",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:aa}]},{type:a,value:d},{type:b,tag:w,props:{id:ab},children:[{type:b,tag:g,props:{href:"#building",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ac}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"举例:"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"bar.h"}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,ar]},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:"ifndef"}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,"expression"]},children:[{type:a,value:as}]}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:"define"}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,"macro-name"]},children:[{type:a,value:as}]}]},{type:a,value:E},{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:O}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,F]},children:[{type:a,value:"\u003Cstdio.h\u003E"}]}]},{type:a,value:E},{type:b,tag:c,props:{className:[e,s]},children:[{type:a,value:at}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,G]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:P}]},{type:a,value:E},{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:"endif"}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,"comment"]},children:[{type:a,value:"\u002F* defined(__foo__bar__) *\u002F"}]}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"bar.c"}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,ar]},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:O}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,F]},children:[{type:a,value:"\"bar.h\""}]}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,y,z]},children:[{type:b,tag:c,props:{className:[e,A]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[e,C,s]},children:[{type:a,value:O}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,F]},children:[{type:a,value:"\u003CCoreFoundation\u002FCoreFoundation.h\u003E"}]}]},{type:a,value:E},{type:b,tag:c,props:{className:[e,s]},children:[{type:a,value:at}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,G]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:I}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:"{"}]},{type:a,value:"\n    "},{type:b,tag:c,props:{className:[e,G]},children:[{type:a,value:"CFShow"}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[e,G]},children:[{type:a,value:"CFSTR"}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[e,F]},children:[{type:a,value:"\"buzz\""}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:P}]},{type:a,value:"\n    \n    "},{type:b,tag:c,props:{className:[e,s]},children:[{type:a,value:"return"}]},{type:a,value:r},{type:b,tag:c,props:{className:[e,"number"]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:P}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,m]},children:[{type:a,value:"}"}]},{type:a,value:" \n\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"从文件bar.h和bar.c开始。\n头文件定义了函数fizz（），它返回一个整数值。\n实现文件导入CoreFoundation框架并实现函数fizz在返回0之前打印字符串“buzz”"}]},{type:a,value:d},{type:b,tag:w,props:{id:ad},children:[{type:b,tag:g,props:{href:"#compiling",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ae}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,"language-bash"]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$  clang -c bar.c -o bar.o\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"这将创建名为“bar”的对象file2，类型为MH_OBJECT的Mach-O二进制文件。"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"One of these will be generated for each of the files compiled in the library."}]},{type:a,value:d},{type:b,tag:w,props:{id:af},children:[{type:b,tag:g,props:{href:"#creating-library",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ag}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ libtool -dynamic bar.o -o libfoo_dynamic.dylib -framework CoreFoundation -lSystem\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"这会创建dylib（动态库）并链接到libSystem和CoreFoundation.framework。 dylib是一个类型为MH_DYLIB的Mach-O二进制文件。这将在启动时由dyld动态加载，作为另一个二进制文件的依赖关系。"}]},{type:a,value:d},{type:b,tag:w,props:{id:ah},children:[{type:b,tag:g,props:{href:"#linking",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ai}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"main.c"}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"#include \"bar.h\"\n\nint main() {\n    return fizz();\n}\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"在这个例子中，为动态库导入“bar.h”头，并直接调用fizz（）。"}]},{type:a,value:d},{type:b,tag:w,props:{id:aj},children:[{type:b,tag:g,props:{href:"#compiling-1",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ak}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ clang -c main.c -o main.o\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"This will generate the object file for main."}]},{type:a,value:d},{type:b,tag:w,props:{id:al},children:[{type:b,tag:g,props:{href:"#linking-1",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:am}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ ld main.o -lSystem -L. -lfoo_dynamic -o test_dynamic\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"这将从主目标文件生成一个二进制可执行文件，并且也会传递"}]},{type:a,value:d},{type:b,tag:"ul",props:{},children:[{type:a,value:d},{type:b,tag:av,props:{},children:[{type:a,value:"-lSystem for dyld_stub_binder"}]},{type:a,value:d},{type:b,tag:av,props:{},children:[{type:a,value:"-lfoo_dynamic for linking against libfoo_dynamic.dylib"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:w,props:{id:an},children:[{type:b,tag:g,props:{href:"#running",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:ao}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ .\u002Ftest_dynamic\nbuzz\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Symbols:"}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ nm test_dynamic \n0000000000001000 A __mh_execute_header\n                 U _fizz\n0000000000001fa0 T _main\n                 U dyld_stub_binder\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"References:"}]},{type:a,value:d},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,x]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"$ otool -L test_dynamic \ntest_dynamic:\n    \u002Fusr\u002Flib\u002FlibSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1)\n    libfoo_dynamic.dylib (compatibility version 0.0.0, current version 0.0.0)\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"生成的二进制文件仅链接到libSystem和创建的dylib。\n库foo_dynamic负责链接它所需的任何附加库。\n这是在发布时动态解决的。\n在这种情况下，libfoo_dynamic.dylib的搜索路径将与主要可执行文件的搜索位置相同。\n动态库和框架在启动时由动态链接器加载。\n它们具有相关的搜索路径，以帮助链接程序找到它们在文件系统上的位置并加载它们。"}]},{type:a,value:d},{type:b,tag:v,props:{id:ap},children:[{type:b,tag:g,props:{href:"#static-linking",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:aq}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"与动态链接不同，链接静态库包含库中的目标文件代码到目标的二进制文件中。\n这会导致更占空间，启动时间更慢。\n由于库的代码直接添加到链接目标的二进制文件，这意味着要更新库中的任何代码，链接目标也必须重新构建。"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"在iOS 8之前，静态链接库是事实上的出货方式，并在应用程序中包含任何第三方代码。"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"略"}]},{type:a,value:d},{type:b,tag:v,props:{id:D},children:[{type:b,tag:g,props:{href:"#%E5%8F%82%E8%80%83%E5%87%BA%E5%A4%84",ariaHidden:h,tabIndex:i},children:[{type:b,tag:c,props:{className:[j,k]},children:[]}]},{type:a,value:D}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:b,tag:g,props:{href:aw,rel:[K,L,M],target:N},children:[{type:a,value:aw}]}]},{type:a,value:d}]},dir:"\u002Fwiki\u002Fz-iOSRe",path:ax,extension:".md",createdAt:ay,updatedAt:ay},prev:{slug:az,title:aA,date:J},next:{slug:aB,title:aC,date:aD},scrollTop:aE,sideCategory:[{folderName:"z-iOSRe",articles:[{slug:Q,title:R,date:S,path:ax},{slug:aB,title:aC,date:aD,path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-GDB使用"},{slug:"z-iOSRe-class-dump",title:"安装class-dump",date:J,path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-class-dump"},{slug:"z-iOSRe-dyld_decache",title:"dyld_decache",date:"2018-02-20T00:00:00.000Z",path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-dyld_decache"},{slug:"z-iOSRe-reveal-app",title:"Reveal+越狱手机,查看app UI层级",date:"2017-12-21T00:00:00.000Z",path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-reveal-app"},{slug:"z-iOSRe-ssh-pwd",title:"Jailbreak:修改ssh密码",date:J,path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-ssh-pwd"},{slug:az,title:aA,date:J,path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-theos-usage"},{slug:"z-iOSRe-砸壳",title:"(转)一键砸壳",date:"2018-02-22T19:31:39.000Z",path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-砸壳"},{slug:"z-iOSRe-越狱手机免密登录",title:"免密登录",date:"2019-03-05T00:00:00.000Z",path:"\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-越狱手机免密登录"}],children:[]}]}],fetch:{},mutations:aE}}("text","element","span","\n","token","p","a","true",-1,"icon","icon-link","code","punctuation","div","nuxt-content-highlight","pre","line-numbers"," ","keyword",2,3,"h2","h3","language-text","macro","property","directive-hash","#","directive","参考出处","\n\n","string","function","(",")","2018-01-23T00:00:00.000Z","nofollow","noopener","noreferrer","_blank","include",";","z-iOSRe-Dynamic Libraries","Dynamic Libraries","2018-02-13T15:29:03.000Z","linking-libraries","Linking Libraries","dynamic-linking","Dynamic Linking","libraries","Libraries","frameworks","Frameworks","example","Example","building","Building","compiling","Compiling:","creating-library","Creating Library:","linking","Linking","compiling-1","Compiling","linking-1","Linking:","running","Running:","static-linking","Static Linking","language-c","__foo__bar__","int","fizz","li","https:\u002F\u002Fpewpewthespells.com\u002Fblog\u002Fstatic_and_dynamic_libraries.html","\u002Fwiki\u002Fz-iOSRe\u002Fz-iOSRe-Dynamic Libraries","2021-09-10T05:59:23.836Z","z-iOSRe-theos-usage","theos安装使用","z-iOSRe-GDB使用","LLDB+debugserver","2018-02-17T10:33:51.000Z",void 0)));