__NUXT_JSONP__("/wiki/content/%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0-%E5%8F%8C%E5%86%92%E5%8F%B7%E5%92%8C-%3E", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P){return {data:[{},{article:{slug:w,title:x,layout:"page",date:h,toc:[{id:y,depth:j,text:"-\u003E 访问类的非静态属性"},{id:k,depth:j,text:"::访问静态属性"},{id:i,depth:j,text:i}],body:{type:"root",children:[{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:g,props:{href:A,rel:[B,C,D],target:E},children:[{type:a,value:A}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{id:y},children:[{type:b,tag:g,props:{href:"#--%E8%AE%BF%E9%97%AE%E7%B1%BB%E7%9A%84%E9%9D%9E%E9%9D%99%E6%80%81%E5%B1%9E%E6%80%A7",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:b,tag:f,props:{},children:[{type:a,value:"-\u003E"}]},{type:a,value:" 访问类的非静态属性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"可以用来访问类的非静态属性:"}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"class SimpleClass{\n\n    \u002F\u002F属性由`public` `proteccted`、`private`开头，然后跟一个普通的变量声明来组成\n    \u002F\u002F为了向后兼容 PHP 4，PHP 5 声明属性依然可以直接使用关键字 var 来替代,\n    \u002F\u002F如果直接使用 var 声明属性，而没有用 public，protected 或 private 之一，PHP 5 会将其视为 public。\n    public $var = 'a default value';\n\n    \u002F\u002F在类的成员方法里面，可以用 -\u003E（对象运算符）：$this-\u003Eproperty（其中 property 是该属性名）这种方式来访问非静态属性。\n    \u002F\u002F静态属性则是用 ::（双冒号）：self::$property 来访问。\n    public function displayVar(){\n        echo $this-\u003Evar;\n    }\n}\n\n$a = new SimpleClass();\n\u002F\u002F$a = 'SimpleClass';\n\u002F\u002F$a = new $className;\n\u002F\u002F调用属性\necho $a -\u003Evar;\n\u002F\u002F调用方法\n$a -\u003E displayVar();\n"}]}]}]},{type:a,value:c},{type:b,tag:l,props:{id:k},children:[{type:b,tag:g,props:{href:"#%E8%AE%BF%E9%97%AE%E9%9D%99%E6%80%81%E5%B1%9E%E6%80%A7",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:b,tag:f,props:{},children:[{type:a,value:"::"}]},{type:a,value:k}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"class SimpleClass{\n    \u002F\u002F这是一个类常量\n    const constant = 'constant value';\n    \u002F\u002F这是一个静态属性\n    public static $my_static = 'foo';\n    \n    public function staticValue(){\n        return self::$my_static;\n    }\n    \u002F\u002F静态方法(类方法)\n    public static function myfunc(){\n        echo 'static function '.'\u003C\u002Fbr\u003E';\n    }\n}\n\necho SimpleClass::constant;\n$a = new SimpleClass();\necho $a::constant;\nSimpleClass::myfunc();\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"使用类或者实例访问都是可以的"}]},{type:a,value:c},{type:b,tag:l,props:{id:i},children:[{type:b,tag:g,props:{href:"#%E5%85%B3%E9%94%AE%E5%AD%97const%E5%92%8Cstatic%E7%9A%84%E5%8C%BA%E5%88%AB",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:i}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"参考出处: "},{type:b,tag:g,props:{href:F,rel:[B,C,D],target:E},children:[{type:a,value:F}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"1). "},{type:b,tag:f,props:{},children:[{type:a,value:"const"}]},{type:a,value:"只能修饰成员属性,不可以修饰方法"}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"class Test{  \n    const PATH = 'c\u002F';\u002F\u002F修饰常量  \n    const function test(){\u002F\u002F这种方法是错误的，const无法修饰方法  \n    }  \n    public function ass(){  \n        echo $this::PATH.'\u003Cbr \u002F\u003E';  \n        echo self::PATH.'\u003Cbr \u002F\u003E';  \n    }  \n} \n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"其中self(不加"},{type:b,tag:f,props:{},children:[{type:a,value:"$"}]},{type:a,value:")代表当前类名，"},{type:b,tag:f,props:{},children:[{type:a,value:"$this"}]},{type:a,value:"代表当前对象。这样，我们就可以在类内部调用const修饰的常量了。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2). const虽然很好用，但是一经定义就无法修改值了，但是有的时候我们需要一个属于类的属性，但是又可以修改其值，比如统计此类构造了几个对象，这个时候就是使用static的时候了。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在static修饰类的成员变量的时候，它的使用方法基本与const一样，区别就在于static修饰的属性可以添加权限（7.1的php中const也可以添加，以前的不能），并且static修饰的成员变量的值是可以修改的。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"但是当static修饰成员方法的时候，使用方法有一点改变，在类的内部，"},{type:b,tag:"strong",props:{},children:[{type:a,value:"static修饰的方法体内部，无法访问当前类的任何普通成员变量"}]},{type:a,value:"，准确的来说是无法使用关键字$this，只可以使用当前类的静态成员变量，和类常量。"}]}]},dir:"\u002Fwiki\u002FPHP\u002F基础笔记",path:G,extension:".md",createdAt:H,updatedAt:H},prev:{slug:I,title:J,date:h},next:{slug:K,title:L,date:M},scrollTop:N,sideCategory:[{folderName:"PHP",articles:[{slug:"PHP-Grav玩法-Header",title:"Grav玩法-Header",date:"2018-01-18T16:18:03.000Z",path:"\u002Fwiki\u002FPHP\u002FPHP-Grav玩法-Header"},{slug:"PHP-Grav玩法-安装配置",title:"Grav玩法-安装配置",date:"2018-01-19T16:18:03.000Z",path:"\u002Fwiki\u002FPHP\u002FPHP-Grav玩法-安装配置"},{slug:"PHP-PHP系统架构师成长之路",title:"PHP系统架构师成长之路",date:"2017-09-04T13:15:59.000Z",path:"\u002Fwiki\u002FPHP\u002FPHP-PHP系统架构师成长之路"}],children:[{folderName:"Yii",articles:[{slug:"Yii-Yii Gii工具使用",title:"Yii Gii工具使用",date:O,path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii Gii工具使用"},{slug:"Yii-Yii 安全篇",title:"Yii 安全篇",date:O,path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii 安全篇"},{slug:"Yii-Yii-install",title:"Yii安装",date:"2017年07月11日21:03:26",path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii-install"},{slug:"Yii-Yii-lifecycle",title:"life Cycle",date:"2017-07-16T15:53:11.000Z",path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii-lifecycle"},{slug:"Yii-Yii学习笔记(二)",title:"Yii学习笔记(二)",date:P,path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii学习笔记(二)"},{slug:"Yii-Yii学习资料",title:"Yii学习资料",date:"2017-09-06T08:39:17.000Z",path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii学习资料"},{slug:"Yii-view-action",title:"Action、View",date:"2017-09-02T11:14:01.000Z",path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-view-action"},{slug:K,title:L,date:M,path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-yii-database"},{slug:"Yii-Yii学习笔记",title:"Yii学习笔记(一)",date:P,path:"\u002Fwiki\u002FPHP\u002FYii\u002FYii-Yii学习笔记"}],children:[]},{folderName:"基础笔记",articles:[{slug:"基础笔记-1.PHP的标记形式 && 变量",title:"变量",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-1.PHP的标记形式 && 变量"},{slug:"基础笔记-10. 数组",title:"数组",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-10. 数组"},{slug:"基础笔记-2. 常量 ",title:"常量",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-2. 常量 "},{slug:"基础笔记-3. 基本数据类型",title:"基本数据类型",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-3. 基本数据类型"},{slug:"基础笔记-4.复合数据类型",title:"复合数据类型",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-4.复合数据类型"},{slug:"基础笔记-5. 运算符 位移运算 ",title:"运算符 位移运算",date:"2017-06-15 010:02",path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-5. 运算符 位移运算 "},{slug:"基础笔记-6. 控制脚本的执行顺序 ",title:"控制脚本的执行顺序",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-6. 控制脚本的执行顺序 "},{slug:"基础笔记-7.文件加载 ",title:"文件加载\"",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-7.文件加载 "},{slug:"基础笔记-8. 错误处理",title:"错误处理",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-8. 错误处理"},{slug:"基础笔记-9. 函数",title:"函数",date:e,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-9. 函数"},{slug:"基础笔记-json",title:"json",date:"2017-10-29T11:54:28.000Z",path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-json"},{slug:I,title:J,date:h,path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-namespace、use关键字"},{slug:"基础笔记-php-替代语法",path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-php-替代语法"},{slug:"基础笔记-twig-date-Zero-padding",title:"twig日期格式化,日期补0问题",date:"2018-04-27T09:30:27.000Z",path:"\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-twig-date-Zero-padding"},{slug:w,title:x,date:h,path:G}],children:[]}]}]}],fetch:{},mutations:N}}("text","element","\n","p","2017-06-15 10:02","code","a","2017-09-02T15:53:55.000Z","关键字const和static的区别",2,"访问静态属性","h2","true",-1,"span","icon","icon-link","div","nuxt-content-highlight","pre","language-text","line-numbers","基础笔记-双冒号和-\u003E","::和-\u003E","--访问类的非静态属性","blockquote","http:\u002F\u002Fphp.net\u002Fmanual\u002Fzh\u002Flanguage.oop5.basic.php","nofollow","noopener","noreferrer","_blank","http:\u002F\u002Fblog.csdn.net\u002Fu012368971\u002Farticle\u002Fdetails\u002F53492555","\u002Fwiki\u002FPHP\u002F基础笔记\u002F基础笔记-双冒号和-\u003E","2021-09-16T14:30:30.428Z","基础笔记-namespace、use关键字","namespace和use关键字","Yii-yii-database","database","2017-09-03T17:29:38.000Z",void 0,"2017-10-15T13:39:37.000Z","2017-09-07T20:46:52.000Z")));